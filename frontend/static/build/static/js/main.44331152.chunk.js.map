{"version":3,"sources":["reportWebVitals.js","util.tsx","components/Header.tsx","components/App/App.tsx","components/Login.tsx","components/Register.tsx","components/Admin/Admin.tsx","components/Admin/ParkForm.tsx","components/ImageForm.tsx","components/Admin/TrailForm.tsx","fetch.ts","components/User/Home.tsx","constants.ts","components/Admin/AdminParkDetail.tsx","components/Admin/AdminTrailDetail.tsx","components/Admin/AdminList.tsx","components/User/FeedbackModal.tsx","components/User/LoginModal.tsx","components/User/RegisterModal.tsx","components/User/MapModal.tsx","components/User/TrailDetail.tsx","components/User/ParkDetail.tsx","TimeInput.tsx","components/User/TripForm.tsx","components/User/Trips.tsx","components/User/TripDetail.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","handleError","err","console","warn","handleInput","setState","name","value","target","prevState","_objectSpread","[object Object]","convertWindDegrees","x","convertTimeFormat","time","slice","getWeatherIcons","description","includes","React","createElement","FontAwesomeIcon","icon","faCloud","faCloudSun","faCloudShowersHeavy","faWind","faSnowflake","faSmog","faSun","Header","auth","setAuth","navigate","admin","setAdmin","handleLogout","async","preventDefault","options","method","headers","Content-Type","X-CSRFToken","Cookies","get","response","fetch","catch","ok","Error","remove","className","Accordion","Link","to","Body","NavLink","type","onClick","App","useNavigate","useState","useEffect","json","is_superuser","getAdminStatus","Outlet","context","Login","useOutletContext","state","username","password","error","setError","Form","onSubmit","body","JSON","stringify","message","non_field_errors","data","set","concat","key","Label","htmlFor","Control","id","required","autoComplete","onChange","Register","email","password1","password2","errors","setErrors","Object","entries","alert","Admin","parks","setParks","trails","setTrails","getParkList","getTrailList","ParkForm","setIsAddingPark","latitude","longitude","fee","park_code","hours","activities","address","submittedPark","ImageForm","previewImage","TrailForm","INITIAL_STATE","park","elevation_gain","length","trail_type","isAddingPark","image","setImage","preview","setPreview","isAddingImage","setIsAddingImage","parkOptionsHTML","map","submittedTrail","formData","FormData","append","options2","response2","trailTypeSelect","document","querySelector","querySelectorAll","selected","parkSelect","defaultValue","step","min","as","rows","_e$target$files","file","files","reader","FileReader","onloadend","result","readAsDataURL","src","alt","fetchWrapper","url","Home","searchState","setSearchState","isSearching","setIsSearching","results","setResults","parksHTML","style","display","margin","trailsHTML","trail","popupHtml","Marker","position","Popup","resultsHtml","fuse","Fuse","isCaseSensitive","includeScore","shouldSort","includeMatches","findAllMatches","minMatchCharLength","keys","item","index","onMouseDown","newData","search","onFocus","onBlur","placeholder","faMagnifyingGlass","MapContainer","center","zoom","TileLayer","attribution","Item","eventKey","TRAIL_TYPES","oab","loop","seg","RADIO_OPTIONS","pet_stance","df","npa","parking","lpark","apark","cell_strength","ncell","wcell","scell","bathrooms","nbath","cbath","dbath","DIFFICULTY_KEY","level","FEEDBACK_CHECKBOX_OPTIONS","AdminParkDetail","_state$park_code","_state$activities","params","useParams","isEditing","setIsEditing","parkId","getPark","trailHtml","toString","undefined","parkcode","newParkList","filter","newTrailList","AdminTrailDetail","imagelist","setImageList","trailId","getImages","getTrail","imageHTML","newImageList","deleteImage","prevlist","difficulty","replaceAll","AdminList","FeedbackModal","show","setShow","handleClose","initialFeedback","reduce","prevValue","currentValue","radioKey","radioValues","values","initialRadioOptions","checkedState","setCheckedState","radioState","setRadioState","handleRadioInput","checkboxHtml","option","displayValue","_e$target","_e$target2","checked","handleFeedback","radioHtml","obj","title","toUpperCase","replace","formatRadioHeader","printButtons","button","push","Modal","onHide","closeButton","token","submit","LoginModal","setShowRegister","RegisterModal","setShowLogin","Map","dialogClassName","_document","link","href","download","appendChild","removeChild","html2canvas","useCORS","toDataURL","downloadMap","TrailDetail","showFeedback","setShowFeedback","showLogin","showRegister","showMap","setShowMap","imageList","handleOpenLogin","images","difficultyMap","entry","difficultyHtml","weatherHtml","_state$weather$daily","feedbackHtml","imageHtml","weather","daily","day","date","Date","dt","toLocaleDateString","weekday","month","temp","toFixed","wind_speed","wind_deg","radioFeedbackHtml","printRadioFeedback","variable","string","handleOpenMap","faMap","OverlayTrigger","placement","delay","hide","overlay","props","Tooltip","assign","trigger","Button","variant","faCircleQuestion","handleOpenFeedback","MapModal","toNumber","ParkDetail","setTrailId","TimeInput","setFormState","formState","INITIAL_VALUE","hr","amPm","oldTime","newTime","TripForm","notes","setTrail","_trail$weather$daily","_day$weather","_day$weather$","_day$weather2","_day$weather2$","_day$wind_speed","_data$time","Trips","trips","setTrips","getTrips","currentTime","upcomingTripsHtml","trip","trailname","convertDateFormat","pastTripsHtml","sort","item1","item2","setHours","year","convertDateFormatWithYear","TripDetail","isEditingDate","setIsEditingDate","isEditingTime","setIsEditingTime","isEditingNotes","setIsEditingNotes","setTrip","tripId","getTripDetails","editTrip","updatedTrip","_trip$weather$daily","faPencil","parkname","deleteTrip","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter","Routes","Route","path","element","padding"],"mappings":"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","file":"static/js/main.44331152.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ChangeEvent, Dispatch } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCloudSun,\n  faCloudShowersHeavy,\n  faCloud,\n  faSun,\n  faSmog,\n  faSnowflake,\n  faWind,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\n\nexport const handleError = (err: unknown) => {\n  console.warn(err);\n};\n\nexport const handleInput = (\n  e: ChangeEvent<HTMLInputElement>,\n  setState: Dispatch<any>,\n) => {\n  const { name, value } = e.target;\n\n  setState((prevState: Record<string, any>) => ({\n    ...prevState,\n    [name]: value,\n  }));\n};\n\nexport const getWeather = async (lat: string, long: string) => {\n  const USER_AGENT =\n    \"(https://trailmix-lkoch.herokuapp.com/, lkoch879@gmail.com)\";\n  const BASE_URL = \"https://api.weather.gov/points/\";\n\n  let data;\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"User-Agent\": USER_AGENT,\n    },\n  };\n\n  const response = await fetch(`${BASE_URL}${lat},${long}`, options).catch(\n    handleError,\n  );\n\n  if (!response?.ok) {\n    throw new Error(\"Network response not ok\");\n  } else {\n    const data1 = await response.json();\n    const newURL = data1.properties.forecast;\n\n    const response2 = await fetch(`${newURL}`, options).catch(handleError);\n\n    if (!response2?.ok) {\n      throw new Error(\"Network response not ok\");\n    } else {\n      data = await response2.json();\n    }\n  }\n  return data.properties.periods;\n};\n\nexport const convertWindDegrees = (x: number) => {\n  if (348.75 < x || x < 11.25) return \"N\";\n  if (11.25 < x && x < 33.75) return \"NNE\";\n  if (33.75 < x && x < 56.25) return \"NE\";\n  if (56.25 < x && x < 78.75) return \"ENE\";\n  if (78.75 < x && x < 101.25) return \"E\";\n  if (101.25 < x && x < 123.75) return \"ESE\";\n  if (123.75 < x && x < 146.25) return \"SE\";\n  if (146.25 < x && x < 168.75) return \"SSE\";\n  if (168.75 < x && x < 191.25) return \"S\";\n  if (191.25 < x && x < 213.75) return \"SSW\";\n  if (213.75 < x && x < 236.25) return \"SW\";\n  if (236.25 < x && x < 258.75) return \"WSW\";\n  if (258.75 < x && x < 281.25) return \"W\";\n  if (281.25 < x && x < 303.75) return \"WNW\";\n  if (303.75 < x && x < 326.25) return \"NW\";\n  if (326.25 < x && x < 348.75) return \"NNW\";\n  else return \"incorrect value\";\n};\n\nexport function convertDateFormat(date: string) {\n  let data = new Date(date);\n  let formattedDate = data.toLocaleDateString(undefined, {\n    weekday: \"long\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n  return formattedDate;\n}\n\nexport function convertDateFormatWithYear(date: string) {\n  let data = new Date(date);\n  let formattedDate = data.toLocaleDateString(undefined, {\n    weekday: \"long\",\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n  return formattedDate;\n}\n\nexport function convertTimeFormat(time: string) {\n  if (time && time[0] === \"0\") {\n    let newTime = time.slice(1);\n    return newTime;\n  } else return time;\n}\n\nexport function getWeatherIcons(description: string) {\n  if (description.includes(\"overcast clouds\")) {\n    return <FontAwesomeIcon icon={faCloud} />;\n  } else if (description.includes(\"scattered clouds\")) {\n    return <FontAwesomeIcon icon={faCloudSun} />;\n  } else if (description.includes(\"rain\")) {\n    return <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (description.includes(\"windy\")) {\n    return <FontAwesomeIcon icon={faWind} />;\n  } else if (description.includes(\"snow\")) {\n    return <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (description.includes(\"fog\")) {\n    return <FontAwesomeIcon icon={faSmog} />;\n  } else {\n    return <FontAwesomeIcon icon={faSun} />;\n  }\n}\n","import Cookies from \"js-cookie\";\nimport { NavLink, Link, NavigateFunction } from \"react-router-dom\";\nimport { handleError } from \"../util\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport React, { Dispatch, MouseEvent } from \"react\";\n\nfunction Header({\n  auth,\n  setAuth,\n  navigate,\n  admin,\n  setAdmin,\n}: {\n  auth: boolean;\n  setAuth: Dispatch<boolean>;\n  navigate: NavigateFunction;\n  admin: boolean;\n  setAdmin: Dispatch<boolean>;\n}) {\n  const handleLogout = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n    };\n\n    const response = await fetch(\"/rest-auth/logout/\", options).catch(\n      handleError,\n    );\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    } else {\n      Cookies.remove(\"Authorization\");\n      setAuth(false);\n      setAdmin(false);\n    }\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"header\">\n      <Accordion className=\"mobile forest-green header\">\n        <Accordion.Header>\n          <Link className=\"background-color-font nav-button\" to=\"/\">\n            <h1>TrailMix</h1>\n          </Link>\n        </Accordion.Header>\n        <Accordion.Body>\n          <ul>\n            {auth && !admin && (\n              <li>\n                <NavLink\n                  className=\"btn toggle-btn background-color-font nav-button\"\n                  to=\"/trips\"\n                >\n                  My Trips\n                </NavLink>\n              </li>\n            )}\n            {admin && (\n              <li>\n                <NavLink\n                  className=\"btn toggle-btn background-color-font nav-button\"\n                  to=\"administrator/addtrail\"\n                >\n                  Add New Trail\n                </NavLink>\n              </li>\n            )}\n            {auth ? (\n              <li>\n                <button\n                  type=\"button\"\n                  className=\"btn toggle-btn background-color-font nav-button\"\n                  onClick={handleLogout}\n                  value={\"logout\"}\n                >\n                  Logout\n                </button>\n              </li>\n            ) : (\n              <li>\n                <NavLink\n                  className=\"background-color-font nav-button\"\n                  to=\"login\"\n                >\n                  Login\n                </NavLink>\n              </li>\n            )}\n          </ul>\n        </Accordion.Body>\n      </Accordion>\n      <nav className=\"forest-green desktop\">\n        <ul>\n          <div className=\"left-header\">\n            <Link className=\"background-color-font\" to=\"/\">\n              <h1>TrailMix</h1>\n            </Link>\n            <div className=\"nav-links\">\n              {admin && (\n                <li>\n                  <NavLink\n                    className=\"btn toggle-btn background-color-font\"\n                    to=\"administrator/addtrail\"\n                  >\n                    Add New Trail\n                  </NavLink>\n                </li>\n              )}\n              {!admin && auth && (\n                <li>\n                  <NavLink\n                    className=\"btn toggle-btn background-color-font desktop-nav-button\"\n                    to=\"/trips\"\n                  >\n                    My Trips\n                  </NavLink>\n                </li>\n              )}\n            </div>\n          </div>\n          <div className=\"login-logout-button\">\n            {auth ? (\n              <li>\n                <button\n                  type=\"button\"\n                  className=\"btn toggle-btn background-color-font\"\n                  onClick={handleLogout}\n                  value={\"logout\"}\n                >\n                  Logout\n                </button>\n              </li>\n            ) : (\n              <li>\n                <NavLink className=\"background-color-font\" to=\"login\">\n                  Login\n                </NavLink>\n              </li>\n            )}\n          </div>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default Header;\n","import { useState, useEffect, Dispatch } from \"react\";\nimport Header from \"../Header\";\nimport Cookies from \"js-cookie\";\nimport { NavigateFunction, Outlet, useNavigate } from \"react-router-dom\";\nimport { handleError } from \"../../util\";\nimport React from \"react\";\n\nexport type OutletContext = {\n  navigate: NavigateFunction;\n  auth: string;\n  setAuth: Dispatch<boolean>;\n  admin: boolean;\n  setAdmin: Dispatch<boolean>;\n};\n\nfunction App() {\n  const navigate = useNavigate();\n\n  const [auth, setAuth] = useState(!!Cookies.get(\"Authorization\"));\n  const [admin, setAdmin] = useState<boolean>(false);\n\n  useEffect(() => {\n    const getAdminStatus = async () => {\n      const response = await fetch(\"/rest-auth/user/\").catch(handleError);\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      } else {\n        const data = await response.json();\n        if (data.is_superuser) {\n          setAdmin(true);\n        }\n      }\n    };\n\n    if (auth) {\n      getAdminStatus();\n    }\n  }, [auth]);\n\n  return (\n    <div className=\"App conatiner-fluid\">\n      <Header\n        auth={auth}\n        setAuth={setAuth}\n        navigate={navigate}\n        admin={admin}\n        setAdmin={setAdmin}\n      />\n      <main>\n        <Outlet context={{ navigate, auth, setAuth, admin, setAdmin }} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import Form from \"react-bootstrap/Form\";\nimport { ChangeEvent, FormEvent, useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { handleError, handleInput } from \"../util\";\nimport Cookies from \"js-cookie\";\nimport React from \"react\";\nimport { OutletContext } from \"./App/App\";\n\nfunction Login() {\n  const { navigate, setAuth, setAdmin } = useOutletContext<OutletContext>();\n\n  const INITIAL_STATE = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const [state, setState] = useState(INITIAL_STATE);\n  const [error, setError] = useState(false);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n      body: JSON.stringify(state),\n    };\n\n    const response = await fetch(\"/rest-auth/login/\", options).catch(\n      handleError,\n    );\n\n    if (!response?.ok) {\n      const message = await response?.json();\n      if (message.non_field_errors) {\n        setError(message.non_field_errors[0]);\n      }\n      throw new Error(\"Network response not ok\");\n    } else {\n      const data = await response.json();\n      Cookies.set(\"Authorization\", `Token ${data.key}`);\n      if (data.is_superuser) {\n        setAdmin(true);\n      }\n      setAuth(true);\n    }\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"wrapper form-wrapper\">\n      <Form className=\"form-styles\" onSubmit={handleSubmit}>\n        {error && <div className=\"error-message\">{error}</div>}\n        <Form.Label htmlFor=\"username\">Username</Form.Label>\n        <Form.Control\n          id=\"username\"\n          required\n          autoComplete=\"off\"\n          name=\"username\"\n          value={state.username}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n        />\n        <Form.Label htmlFor=\"password\">Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          id=\"password\"\n          required\n          autoComplete=\"off\"\n          name=\"password\"\n          value={state.password}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n        />\n        <div className=\"button-wrapper\">\n          <button className=\"submit-button fade-button\" type=\"submit\">\n            Log in\n          </button>\n        </div>\n      </Form>\n\n      <div className=\"button-wrapper footnote\">\n        <button\n          type=\"button\"\n          value=\"registration\"\n          onClick={() => navigate(\"register/\")}\n          className=\"verification-redirect\"\n        >\n          I need to make an account\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import Form from \"react-bootstrap/Form\";\nimport { ChangeEvent, FormEvent, useState } from \"react\";\nimport { useOutletContext } from \"react-router-dom\";\nimport { handleError, handleInput } from \"../util\";\nimport Cookies from \"js-cookie\";\nimport { OutletContext } from \"./App/App\";\nimport React from \"react\";\n\nfunction Register() {\n  const { navigate, setAuth } = useOutletContext<OutletContext>();\n\n  const INITIAL_STATE = {\n    username: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n  };\n\n  const [state, setState] = useState(INITIAL_STATE);\n  const [errors, setErrors] = useState({\n    email: false,\n    password1: false,\n    password2: false,\n  });\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (state.password1 === state.password2) {\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        },\n        body: JSON.stringify(state),\n      };\n\n      const response = await fetch(\"/rest-auth/registration/\", options).catch(\n        handleError,\n      );\n\n      if (!response?.ok) {\n        const message = (await response?.json()) as {\n          email: boolean[];\n          password1: boolean[];\n          password2: boolean[];\n        };\n\n        for (const [key, value] of Object.entries(message)) {\n          setErrors((prevState) => ({ ...prevState, [key]: value[0] }));\n        }\n      } else {\n        const data = await response.json();\n        Cookies.set(\"Authorization\", `Token ${data.key}`);\n        setAuth(true);\n        navigate(\"/\");\n      }\n    } else {\n      alert(\"passwords must match\");\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Form className=\"form-styles\" onSubmit={handleSubmit}>\n        <Form.Label htmlFor=\"username\">Username</Form.Label>\n        <Form.Control\n          id=\"username\"\n          required\n          autoComplete=\"off\"\n          name=\"username\"\n          value={state.username}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n        />\n        <Form.Label htmlFor=\"email\">Email</Form.Label>\n        {errors.email && <div className=\"error-label\">{errors.email}</div>}\n        <Form.Control\n          className={errors.email ? \"error\" : \"\"}\n          id=\"email\"\n          required\n          name=\"email\"\n          value={state.email}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n        />\n        <Form.Label htmlFor=\"password1\">Password</Form.Label>\n        {errors.password1 && (\n          <div className=\"error-label\">{errors.password1}</div>\n        )}\n        <Form.Control\n          className={errors.password1 ? \"error\" : \"\"}\n          id=\"password1\"\n          required\n          autoComplete=\"off\"\n          name=\"password1\"\n          value={state.password1}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          type=\"password\"\n        />\n        <Form.Label htmlFor=\"password2\">Password</Form.Label>\n        {errors.password2 && (\n          <div className=\"error-label\">{errors.password2}</div>\n        )}\n        <Form.Control\n          className={errors.password2 ? \"error\" : \"\"}\n          id=\"password2\"\n          required\n          autoComplete=\"off\"\n          name=\"password2\"\n          value={state.password2}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          type=\"password\"\n        />\n        <div className=\"button-wrapper\">\n          <button className=\"submit-button invert-color\" type=\"submit\">\n            Register\n          </button>\n        </div>\n      </Form>\n\n      <div className=\"button-wrapper\">\n        <button\n          type=\"button\"\n          value=\"login\"\n          onClick={() => navigate(\"login/\")}\n          className=\"verification-redirect\"\n        >\n          Login to exisiting account\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n","import { Dispatch, useEffect, useState } from \"react\";\nimport { handleError } from \"../../util\";\nimport { Outlet } from \"react-router-dom\";\nimport React from \"react\";\nimport { Park, Trail } from \"../../types\";\n\nexport type AdminOutletContext = {\n  parks: Park[];\n  setParks: Dispatch<Maybe<Park[]>>;\n  trails: Trail[];\n  setTrails: Dispatch<Maybe<Trail[]>>;\n};\n\nfunction Admin() {\n  const [parks, setParks] = useState([]);\n  const [trails, setTrails] = useState([]);\n\n  useEffect(() => {\n    const getParkList = async () => {\n      const response = await fetch(\"/api/v1/trails/admin/parks/\").catch(\n        handleError,\n      );\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      } else {\n        const data = await response.json();\n        setParks(data);\n      }\n    };\n\n    const getTrailList = async () => {\n      const response = await fetch(\"/api/v1/trails/admin/\").catch(handleError);\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      } else {\n        const data = await response.json();\n        setTrails(data);\n      }\n    };\n    getParkList();\n    getTrailList();\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      <Outlet context={{ parks, setParks, trails, setTrails }} />\n    </div>\n  );\n}\n\nexport default Admin;\n","import {\n  ChangeEvent,\n  Dispatch,\n  FormEvent,\n  SetStateAction,\n  useState,\n} from \"react\";\nimport { handleError, handleInput } from \"../../util\";\nimport Form from \"react-bootstrap/Form\";\nimport Cookies from \"js-cookie\";\nimport React from \"react\";\nimport { Park } from \"../../types\";\n\nfunction ParkForm({\n  setParks,\n  setIsAddingPark,\n}: {\n  setParks: Dispatch<SetStateAction<Park[]>>;\n  setIsAddingPark: Dispatch<SetStateAction<boolean>>;\n}) {\n  const INITIAL_STATE = {\n    name: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    fee: \"\",\n    park_code: \"\",\n    hours: \"\",\n    activities: \"\",\n    address: \"\",\n  };\n\n  const [state, setState] = useState(INITIAL_STATE);\n\n  const addNewPark = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(state),\n    };\n\n    const response = await fetch(\"/api/v1/trails/admin/parks/\", options).catch(\n      handleError,\n    );\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n    const submittedPark = (await response.json()) as Park;\n\n    setParks((parks) => [...parks, submittedPark]);\n    setIsAddingPark(false);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={addNewPark}>\n        <Form.Label htmlFor=\"park name\">Park Name</Form.Label>\n        <Form.Control\n          id=\"park name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          value={state.name}\n          required\n          autoComplete=\"off\"\n        />\n        <Form.Label htmlFor=\"latitude\">Latitude</Form.Label>\n        <Form.Control\n          id=\"latitude\"\n          name=\"latitude\"\n          type=\"text\"\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          value={state.latitude}\n          required\n          autoComplete=\"off\"\n        />\n        <Form.Label htmlFor=\"longitude\">Longitude</Form.Label>\n        <Form.Control\n          id=\"longitude\"\n          name=\"longitude\"\n          type=\"text\"\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          value={state.longitude}\n          required\n          autoComplete=\"off\"\n        />\n        <Form.Label htmlFor=\"fee\">Fee</Form.Label>\n        <Form.Control\n          id=\"fee\"\n          name=\"fee\"\n          type=\"text\"\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          value={state.fee}\n          autoComplete=\"off\"\n        />\n        <Form.Label htmlFor=\"park_code\">Park Code</Form.Label>\n        <Form.Control\n          id=\"park code\"\n          name=\"park_code\"\n          type=\"text\"\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          value={state.park_code}\n          autoComplete=\"off\"\n        />\n        <Form.Label htmlFor=\"hours\">Hours</Form.Label>\n        <Form.Control\n          id=\"hours\"\n          name=\"hours\"\n          type=\"text\"\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          value={state.hours}\n          autoComplete=\"off\"\n        />\n        <Form.Label htmlFor=\"Address\">Address</Form.Label>\n        <Form.Control\n          id=\"Address\"\n          name=\"address\"\n          type=\"address\"\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          value={state.address}\n          required\n          autoComplete=\"off\"\n        />\n        <Form.Label htmlFor=\"Activities\">Activities</Form.Label>\n        <Form.Control\n          id=\"Activities\"\n          name=\"activities\"\n          type=\"text\"\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n          value={state.activities}\n          autoComplete=\"off\"\n        />\n        <button className=\"trail-list-button\" type=\"submit\">\n          Add park\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport default ParkForm;\n","import Form from \"react-bootstrap/Form\";\nimport React, { ChangeEvent } from \"react\";\n\nfunction ImageForm({\n  previewImage,\n}: {\n  previewImage: (e: ChangeEvent<HTMLInputElement>) => void;\n}) {\n  return (\n    <div>\n      <Form.Label htmlFor=\"image\">Upload image</Form.Label>\n      <Form.Control\n        type=\"file\"\n        name=\"image\"\n        id=\"image\"\n        onChange={previewImage}\n      />\n    </div>\n  );\n}\n\nexport default ImageForm;\n","import ParkForm from \"./ParkForm\";\nimport ImageForm from \"../ImageForm\";\n\nimport Form from \"react-bootstrap/Form\";\nimport { useState, useEffect, FormEvent, ChangeEvent } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { handleError, handleInput } from \"../../util\";\nimport React from \"react\";\nimport { Park } from \"../../types\";\n\nfunction TrailForm() {\n  const [parks, setParks] = useState<Park[]>([]);\n\n  useEffect(() => {\n    const getParkList = async () => {\n      const response = await fetch(\"/api/v1/trails/admin/parks/\").catch(\n        handleError,\n      );\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      } else {\n        const data = await response.json();\n        setParks(data);\n      }\n    };\n    if (!parks) {\n      getParkList();\n    }\n  }, [parks]);\n\n  const INITIAL_STATE = {\n    park: \"\",\n    name: \"\",\n    elevation_gain: \"\",\n    length: 0,\n    description: \"\",\n    trail_type: \"\",\n  };\n\n  const [state, setState] = useState(INITIAL_STATE);\n  const [isAddingPark, setIsAddingPark] = useState<boolean>(false);\n  const [image, setImage] = useState<Maybe<Blob>>(null);\n  const [preview, setPreview] = useState<Maybe<string>>(null);\n  const [isAddingImage, setIsAddingImage] = useState<boolean>(false);\n\n  const handleSelect = (e: ChangeEvent<HTMLSelectElement>) => {\n    if (e.target.value === \"newPark\") {\n      setIsAddingPark(true);\n    } else {\n      setState((prevState) => ({\n        ...prevState,\n        park: e.target.value,\n      }));\n    }\n  };\n\n  const submitTrail = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(state),\n    };\n\n    const response = await fetch(\"/api/v1/trails/admin/\", options).catch(\n      handleError,\n    );\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    const submittedTrail = await response.json();\n\n    if (image && response) {\n      const formData = new FormData();\n      formData.append(\"trail\", submittedTrail.id);\n      formData.append(\"image\", image);\n\n      const options2 = {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        },\n        body: formData,\n      };\n\n      const response2 = await fetch(\"/api/v1/trails/photos/\", options2).catch(\n        handleError,\n      );\n\n      if (!response2?.ok) {\n        throw new Error(\"Network response not ok\");\n      }\n    }\n\n    const trailTypeSelect = document.querySelector(\".trail-type\");\n\n    if (trailTypeSelect) {\n      // trailTypeSelect.querySelectorAll(\"option\")[0].selected = \"selected\";\n      trailTypeSelect.querySelectorAll(\"option\")[0].selected = true;\n    }\n\n    const parkSelect = document.querySelector(\".park-input\");\n    if (parkSelect) {\n      // parkSelect.querySelectorAll(\"option\")[0].selected = \"selected\";\n      parkSelect.querySelectorAll(\"option\")[0].selected = true;\n    }\n\n    setState(INITIAL_STATE);\n    setPreview(null);\n    setIsAddingImage(false);\n    setImage(null);\n  };\n\n  const previewImage = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n\n    if (file) {\n      setImage(file);\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  if (!parks) {\n    return <div>Loading...</div>;\n  }\n\n  const parkOptionsHTML = parks.map((park) => (\n    <option key={park.id} value={park.id}>\n      {park.name}\n    </option>\n  ));\n\n  return (\n    <div>\n      {isAddingPark && (\n        <ParkForm setParks={setParks} setIsAddingPark={setIsAddingPark} />\n      )}\n      <Form onSubmit={submitTrail}>\n        <select\n          id=\"park\"\n          className=\"park-input form-control\"\n          onChange={handleSelect}\n        >\n          <option defaultValue=\"\">Select a park...</option>\n          {parkOptionsHTML}\n          <option value=\"newPark\">Add new park</option>\n        </select>\n        <Form.Label htmlFor=\"trail name\">Trail Name</Form.Label>\n        <Form.Control\n          id=\"trail name\"\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          required\n          value={state.name}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n        />\n        <Form.Label htmlFor=\"elevation gain\">Elevation Gain</Form.Label>\n        <Form.Control\n          id=\"elevation gain\"\n          type=\"number\"\n          name=\"elevation_gain\"\n          autoComplete=\"off\"\n          value={state.elevation_gain}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n        />\n        <Form.Label htmlFor=\"length\">Length</Form.Label>\n        <Form.Control\n          id=\"length\"\n          type=\"number\"\n          step=\"0.1\"\n          min=\"0\"\n          name=\"length\"\n          autoComplete=\"off\"\n          required\n          value={state.length}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n        />\n        <Form.Label htmlFor=\"description\">Description</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows={5}\n          id=\"description\"\n          name=\"description\"\n          autoComplete=\"off\"\n          value={state.description}\n          onChange={(e) =>\n            handleInput(e as unknown as ChangeEvent<HTMLInputElement>, setState)\n          }\n        />\n        <Form.Label htmlFor=\"trail type\">Trail Type</Form.Label>\n        <select\n          className=\"trail-type form-control\"\n          id=\"trail-type\"\n          name=\"trail_type\"\n          onChange={(e) =>\n            setState((prevState) => ({\n              ...prevState,\n              trail_type: e.target.value,\n            }))\n          }\n        >\n          <option defaultValue=\"\">--</option>\n          <option value=\"oab\">Out and Back</option>\n          <option value=\"loop\">Loop</option>\n          <option value=\"seg\">Point to point segment</option>\n        </select>\n        {!isAddingImage && (\n          <button\n            className=\"trail-list-button\"\n            type=\"button\"\n            onClick={() => setIsAddingImage(true)}\n          >\n            Add Image\n          </button>\n        )}\n        {isAddingImage && <ImageForm previewImage={previewImage} />}\n        {preview && isAddingImage && (\n          <div className=\"preview\">\n            <img src={preview} alt=\"preview\" />\n          </div>\n        )}\n        <button className=\"trail-list-button\" type=\"submit\">\n          Save\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport default TrailForm;\n","import Cookies from \"js-cookie\";\nimport { handleError } from \"./util\";\n\nexport const fetchWrapper = async (url: string) => {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n    },\n  };\n\n  const response = await fetch(url, options).catch(handleError);\n\n  if (!response?.ok) {\n    console.error(\"Network response not ok\");\n    return null;\n  }\n  const data = await response.json();\n\n  return data;\n};\n","import { useOutletContext, Link } from \"react-router-dom\";\nimport { ChangeEvent, useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Popup, Marker } from \"react-leaflet\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Fuse from \"fuse.js\";\nimport React from \"react\";\nimport { OutletContext } from \"../App/App\";\nimport { fetchWrapper } from \"../../fetch\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Home() {\n  const { navigate, admin } = useOutletContext<OutletContext>();\n  const [parks, setParks] =\n    useState<\n      Maybe<{ id: string; name: string; latitude: number; longitude: number }[]>\n    >(null);\n  const [trails, setTrails] =\n    useState<Maybe<{ id: string; name: string }[]>>(null);\n  const [searchState, setSearchState] = useState(\"\");\n  const [isSearching, setIsSearching] = useState(false);\n  const [results, setResults] = useState<\n    { id: string; latitude?: string; name: string }[]\n  >([]);\n\n  useEffect(() => {\n    if (admin) {\n      navigate(\"/administrator\");\n    }\n    const getParkList = async () => {\n      const parks = await fetchWrapper(\"/api/v1/trails/parks/\");\n      setParks(parks);\n    };\n\n    const getTrailList = async () => {\n      const trails = await fetchWrapper(\"/api/v1/trails/\");\n      setTrails(trails);\n      setResults(trails);\n    };\n    if (!admin) {\n      getParkList();\n      getTrailList();\n    }\n  }, [admin, navigate]);\n\n  if (!parks || !trails) {\n    return <div>Loading...</div>;\n  }\n\n  const parksHTML = parks.map((park) => (\n    <Link\n      style={{ display: \"block\", margin: \"1rem 0\" }}\n      to={`park/${park.id}`}\n      key={park.id}\n    >\n      {park.name}\n    </Link>\n  ));\n\n  const trailsHTML = trails.map((trail) => (\n    <Link\n      style={{ display: \"block\", margin: \"1rem 0\" }}\n      to={`trail/${trail.id}`}\n      key={trail.id}\n    >\n      {trail.name}\n    </Link>\n  ));\n\n  const popupHtml = parks.map((park) => (\n    <Marker key={park.id} position={[park.latitude, park.longitude]}>\n      <Popup>\n        <Link to={`park/${park.id}`}>{park.name}</Link>\n      </Popup>\n    </Marker>\n  ));\n\n  let resultsHtml;\n\n  const options = {\n    isCaseSensitive: false,\n    includeScore: true,\n    shouldSort: true,\n    includeMatches: false,\n    findAllMatches: false,\n    minMatchCharLength: 1,\n    keys: [\"name\"],\n  };\n\n  const fuse = new Fuse([...trails, ...parks], options);\n\n  if (results.length > 0) {\n    resultsHtml = results.map((item, index) =>\n      item.latitude ? (\n        <div\n          className=\"result\"\n          key={index}\n          onMouseDown={() => navigate(`park/${item.id}`)}\n        >\n          {item.name}\n        </div>\n      ) : (\n        <div\n          className=\"result\"\n          key={index}\n          onMouseDown={() => navigate(`trail/${item.id}`)}\n        >\n          {item.name}\n        </div>\n      ),\n    );\n  } else {\n    resultsHtml = <div>'No matching trails'</div>;\n  }\n\n  const runSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchState(e.target.value);\n    const data = fuse.search(e.target.value);\n    const newData = data.map((result) => result.item);\n    setResults(newData);\n  };\n\n  return (\n    <div className=\"home wrapper\">\n      <div className=\"full-width search\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          onChange={runSearch}\n          name=\"search\"\n          value={searchState}\n          onFocus={() => setIsSearching(true)}\n          onBlur={() => {\n            setIsSearching(false);\n            setSearchState(\"\");\n          }}\n          autoComplete=\"off\"\n          placeholder=\"search trails\"\n        />\n        <FontAwesomeIcon\n          className=\"search-icon gray-font\"\n          icon={faMagnifyingGlass}\n        />\n        <div\n          className={isSearching ? \"search-results\" : \"hidden search-results\"}\n        >\n          {isSearching && resultsHtml}\n        </div>\n      </div>\n      <MapContainer center={[34.842798, -82.7640215]} zoom={9.2}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {popupHtml}\n      </MapContainer>\n      <div className=\"home-lists\">\n        <Accordion>\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>Parks</Accordion.Header>\n            <Accordion.Body>\n              <ul>{parksHTML}</ul>\n            </Accordion.Body>\n          </Accordion.Item>\n          <Accordion.Item eventKey=\"1\">\n            <Accordion.Header>Trails</Accordion.Header>\n            <Accordion.Body>\n              <ul>{trailsHTML}</ul>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","export const TRAIL_TYPES = {\n  oab: \"Out and back\",\n  loop: \"Loop\",\n  seg: \"Trail segment\",\n};\n\nexport const RADIO_OPTIONS = {\n  pet_stance: {\n    df: \"Dog friendly\",\n    npa: \"No pets allowed\",\n  },\n  parking: {\n    lpark: \"Limited parking\",\n    apark: \"Ample parking\",\n  },\n  cell_strength: {\n    ncell: \"No cell service\",\n    wcell: \"Weak signal\",\n    scell: \"Strong signal\",\n  },\n  bathrooms: {\n    nbath: \"No bathrooms\",\n    cbath: \"Clean bathrooms\",\n    dbath: \"Dirty bathrooms\",\n  },\n};\n\nexport const DIFFICULTY_KEY = [\n  {\n    level: 1,\n    description: \"< 3 miles and < 500 feet\",\n  },\n  {\n    level: 2,\n    description: \"< 5 miles and < 1,000 feet\",\n  },\n  {\n    level: 3,\n    description: \"< 7 miles and < 1,500 feet\",\n  },\n  {\n    level: 4,\n    description: \"< 9 miles and < 2,000 feet\",\n  },\n  {\n    level: 5,\n    description: \"< 11 miles and < 2,500 feet\",\n  },\n  {\n    level: 6,\n    description: \" > 11 miles or > 2,5000 feet\",\n  },\n];\n\nexport const FEEDBACK_CHECKBOX_OPTIONS = [\n  \"muddy\",\n  \"rocky\",\n  \"steep\",\n  \"shaded\",\n  \"river_crossing\",\n  \"kid_friendly\",\n  \"paved\",\n  \"wheelchair_accessible\",\n] as const;\n","import {\n  useParams,\n  useNavigate,\n  useOutletContext,\n  Link,\n} from \"react-router-dom\";\nimport { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport { handleError, handleInput } from \"../../util\";\nimport Cookies from \"js-cookie\";\nimport Form from \"react-bootstrap/Form\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport React from \"react\";\nimport { AdminOutletContext } from \"./Admin\";\nimport { TRAIL_TYPES } from \"../../constants\";\nimport { Park, Trail } from \"../../types\";\nimport { toString } from \"lodash\";\n\nfunction AdminParkDetail() {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const { parks, setParks, trails, setTrails } =\n    useOutletContext<AdminOutletContext>();\n\n  const [state, setState] = useState<Maybe<Park & { trails: Trail[] }>>(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    const getPark = async () => {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        },\n      };\n\n      const response = await fetch(\n        `/api/v1/trails/edit/park/${params.parkId}/`,\n        options,\n      ).catch(handleError);\n\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      }\n      const park = await response.json();\n      setState(park);\n    };\n    getPark();\n  }, [params.parkId]);\n\n  const editPark = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(state),\n    };\n\n    const response = await fetch(\n      `/api/v1/trails/edit/park/${state?.id}/`,\n      options,\n    ).catch(handleError);\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    setIsEditing(false);\n  };\n\n  const deletePark = async (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n    };\n\n    const response = await fetch(\n      `/api/v1/trails/edit/park/${state?.id}/`,\n      options,\n    ).catch(handleError);\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    setIsEditing(false);\n\n    const newParkList = parks?.filter((park) => park.id !== state?.id);\n    setParks(newParkList);\n\n    const newTrailList = trails.filter((trail) => trail.park.id !== state?.id);\n    setTrails(newTrailList);\n    navigate(\"/administrator\");\n  };\n\n  if (!state) {\n    return <div>Loading...</div>;\n  }\n\n  const trailHtml = state.trails.map((trail, index) => (\n    <Accordion.Item eventKey={toString(index)} key={index}>\n      <Accordion.Header>{trail.name}</Accordion.Header>\n      <Accordion.Body>\n        <ul>\n          <li>\n            <h4>Length</h4>\n            {trail.length.slice(-1) === \"0\"\n              ? trail.length.slice(0, -1)\n              : trail.length}{\" \"}\n            miles\n          </li>\n          <li>\n            <h4>Elevation gain</h4>\n            {trail.elevation_gain} feet\n          </li>\n          <li>\n            <h4>Trail type</h4>\n            {TRAIL_TYPES[trail.trail_type]}\n          </li>\n        </ul>\n        <div className=\"trail-list-buttons\">\n          <Link\n            className=\"trail-list-button\"\n            to={`/administrator/trail/${trail.id}`}\n          >\n            Go to Trail\n          </Link>\n        </div>\n      </Accordion.Body>\n    </Accordion.Item>\n  ));\n\n  return (\n    <div>\n      {isEditing && (\n        <div>\n          <Form onSubmit={editPark}>\n            <Form.Label htmlFor=\"park name\">Park Name</Form.Label>\n            <Form.Control\n              id=\"park name\"\n              name=\"name\"\n              type=\"text\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              value={state.name}\n              required\n              autoComplete=\"off\"\n            />\n            <Form.Label htmlFor=\"latitude\">Latitude</Form.Label>\n            <Form.Control\n              id=\"latitude\"\n              name=\"latitude\"\n              type=\"text\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              value={state.latitude}\n              required\n              autoComplete=\"off\"\n            />\n            <Form.Label htmlFor=\"longitude\">Longitude</Form.Label>\n            <Form.Control\n              id=\"longitude\"\n              name=\"longitude\"\n              type=\"text\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              value={state.longitude}\n              required\n              autoComplete=\"off\"\n            />\n            <Form.Label htmlFor=\"fee\">Fee</Form.Label>\n            <Form.Control\n              id=\"fee\"\n              name=\"fee\"\n              type=\"text\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              value={state.fee}\n              autoComplete=\"off\"\n            />\n            <Form.Label htmlFor=\"park_code\">Park Code</Form.Label>\n            <Form.Control\n              id=\"park code\"\n              name=\"park_code\"\n              type=\"text\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              value={state.park_code ?? undefined}\n              autoComplete=\"off\"\n            />\n            <Form.Label htmlFor=\"hours\">Hours</Form.Label>\n            <Form.Control\n              id=\"hours\"\n              name=\"hours\"\n              type=\"text\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              value={state.hours}\n              required\n              autoComplete=\"off\"\n            />\n            <Form.Label htmlFor=\"Address\">Address</Form.Label>\n            <Form.Control\n              id=\"Address\"\n              name=\"address\"\n              type=\"address\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              value={state.address}\n              required\n              autoComplete=\"off\"\n            />\n            <Form.Label htmlFor=\"Activities\">Activities</Form.Label>\n            <Form.Control\n              id=\"Activities\"\n              name=\"activities\"\n              type=\"text\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              value={state.activities ?? undefined}\n              autoComplete=\"off\"\n            />\n            <button className=\"trail-list-button\" type=\"submit\">\n              Save changes\n            </button>\n          </Form>\n        </div>\n      )}\n\n      {!isEditing && (\n        <div>\n          <h2>{state.name}</h2>\n          <ul>\n            <li>Address: {state.address}</li>\n            <li>Fee: {state.fee}</li>\n            <li>Hours: {state.hours}</li>\n            <li>Latitude: {state.latitude}</li>\n            <li>Longitude: {state.longitude}</li>\n            <li>Park code:{state.parkcode}</li>\n            <li>Activities: {state.activities}</li>\n          </ul>\n          <button\n            className=\"trail-list-button\"\n            type=\"button\"\n            onClick={() => setIsEditing(true)}\n          >\n            Edit Park\n          </button>\n          <button\n            className=\"trail-list-button\"\n            type=\"button\"\n            onClick={deletePark}\n          >\n            Delete Park\n          </button>\n        </div>\n      )}\n      <Accordion>{trailHtml}</Accordion>\n    </div>\n  );\n}\n\nexport default AdminParkDetail;\n","import { useParams, useNavigate, useOutletContext } from \"react-router-dom\";\nimport { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport { handleError, handleInput } from \"../../util\";\nimport Cookies from \"js-cookie\";\nimport Form from \"react-bootstrap/Form\";\nimport ImageForm from \"../ImageForm\";\nimport React from \"react\";\nimport { AdminOutletContext } from \"./Admin\";\nimport { Trail, Image } from \"../../types\";\nimport { TRAIL_TYPES } from \"../../constants\";\nimport { toString } from \"lodash\";\n\nfunction AdminTrailDetail() {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const { parks, setParks, trails, setTrails } =\n    useOutletContext<AdminOutletContext>();\n\n  const [state, setState] = useState<Maybe<Trail>>(null);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [imagelist, setImageList] = useState<Image[]>([]);\n  const [image, setImage] = useState<Maybe<Blob>>(null);\n  const [preview, setPreview] = useState<Maybe<string>>(null);\n  const [isAddingImage, setIsAddingImage] = useState<boolean>(false);\n\n  const getParkList = async () => {\n    const response = await fetch(\"/api/v1/trails/admin/parks/\").catch(\n      handleError,\n    );\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    } else {\n      const data = await response.json();\n      setParks(data);\n    }\n  };\n\n  if (!parks) {\n    getParkList();\n  }\n\n  const getImages = async (trail: Trail) => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n    };\n\n    const response = await fetch(\n      `/api/v1/trails/photos/trailId/${trail.id}/`,\n      options,\n    ).catch(handleError);\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n    const data = await response.json();\n\n    setImageList(data);\n  };\n\n  useEffect(() => {\n    const getTrail = async () => {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        },\n      };\n\n      const response = await fetch(\n        `/api/v1/trails/edit/${params.trailId}/`,\n        options,\n      ).catch(handleError);\n\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      }\n      const trail = await response.json();\n\n      setState(trail);\n\n      if (trail) {\n        getImages(trail);\n      }\n    };\n    getTrail();\n  }, [params.trailId]);\n\n  if (!state?.id || !parks || !imagelist) {\n    return <div>Loading...</div>;\n  }\n\n  const editTrail = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(state),\n    };\n\n    const response = await fetch(\n      `/api/v1/trails/edit/${state.id}/`,\n      options,\n    ).catch(handleError);\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    if (image) {\n      const formData = new FormData();\n      formData.append(\"trail\", toString(state.id));\n      image && formData.append(\"image\", image);\n\n      const options2 = {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        },\n        body: formData,\n      };\n\n      const response2 = await fetch(\"/api/v1/trails/photos/\", options2).catch(\n        handleError,\n      );\n\n      if (!response2?.ok) {\n        throw new Error(\"Network response not ok\");\n      }\n    }\n\n    setIsEditing(false);\n  };\n\n  const deleteTrail = async (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n    };\n\n    const response = await fetch(\n      `/api/v1/trails/edit/${state.id}/`,\n      options,\n    ).catch(handleError);\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    setIsEditing(false);\n\n    const newTrailList = trails.filter((trail) => trail.id !== state.id);\n\n    setTrails(newTrailList);\n    navigate(\"/administrator\");\n  };\n\n  const addImage = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"trail\", toString(state.id));\n\n    if (image) formData.append(\"image\", image);\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n      body: formData,\n    };\n\n    const response = await fetch(\"/api/v1/trails/photos/\", options).catch(\n      handleError,\n    );\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n    const data = await response.json();\n\n    setImageList((prevlist) => [...prevlist, data]);\n\n    setPreview(null);\n    setIsAddingImage(false);\n    setImage(null);\n  };\n\n  const deleteImage = async (e: ChangeEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n    };\n\n    const response = await fetch(\n      `/api/v1/trails/photos/${e.target.value}/`,\n      options,\n    ).catch(handleError);\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    const newImageList = imagelist?.filter(\n      (image) => image.id !== e.target.value,\n    );\n    setImageList(newImageList);\n  };\n\n  const previewImage = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n\n    if (file) {\n      setImage(file);\n\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreview(reader.result as string);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const imageHTML = imagelist.map((image) => (\n    <div key={image.id}>\n      <div className=\"image-wrapper\">\n        <img src={image.image} alt=\"trail\" />\n      </div>\n      <button\n        type=\"button\"\n        className=\"trail-list-button\"\n        value={image.id}\n        onClick={(e) =>\n          deleteImage(e as unknown as ChangeEvent<HTMLButtonElement>)\n        }\n      >\n        Delete Image\n      </button>\n    </div>\n  ));\n\n  ////////////////////////////////////////////EDITING PARK ASSOCIATED WITH TRIAL\n\n  // at the moment, I'm skipping this as it would require more serializer steps to make work.\n\n  // const handleSelect = (e) => {\n  //     setState((prevState) => ({\n  //         ...prevState,\n  //         park: e.target.value,\n  //     }))\n  // };\n\n  // console.log(parks);\n  // console.log(state.park);\n  // parks.forEach((park) => (console.log(park.name)));\n  // parks.forEach((park) => (console.log(park.name === state.park)));\n  // const parkOptionsHTML = parks\n  //     .map((park) => (park.name === state.park ?\n  //         <option key={park.id} value={park.id}>{park.name}</option> : <option key={park.id} value={park.id}>{park.name}</option>)\n  //     );\n\n  return (\n    <div>\n      {isEditing && (\n        <div>\n          <Form onSubmit={editTrail}>\n            <Form.Label htmlFor=\"trail name\">Trail Name</Form.Label>\n            <Form.Control\n              id=\"trail name\"\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"off\"\n              required\n              value={state.name}\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n            />\n            <Form.Label htmlFor=\"elevation gain\">Elevation Gain</Form.Label>\n            <Form.Control\n              id=\"elevation gain\"\n              type=\"number\"\n              name=\"elevation_gain\"\n              autoComplete=\"off\"\n              value={state.elevation_gain}\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n            />\n            <Form.Label htmlFor=\"length\">Length</Form.Label>\n            <Form.Control\n              id=\"length\"\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              name=\"length\"\n              autoComplete=\"off\"\n              required\n              value={state.length}\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n            />\n            <Form.Label htmlFor=\"description\">Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={5}\n              id=\"description\"\n              name=\"description\"\n              autoComplete=\"off\"\n              value={state.description}\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n            />\n            <Form.Label htmlFor=\"trail type\">Trail Type</Form.Label>\n            <select\n              className=\"trail-type form-control\"\n              id=\"trail-type\"\n              value={state.trail_type}\n              name=\"trail_type\"\n              onChange={(e) =>\n                setState((prevState) => {\n                  if (prevState) {\n                    return {\n                      ...prevState,\n                      trail_type: e.target.value as keyof typeof TRAIL_TYPES,\n                    };\n                  } else {\n                    return prevState;\n                  }\n                })\n              }\n            >\n              <option defaultValue=\"null\">--</option>\n              <option value=\"oab\">Out and Back</option>\n              <option value=\"loop\">Loop</option>\n              <option value=\"seg\">Point to point segment</option>\n            </select>\n            <button className=\"trail-list-button\" type=\"submit\">\n              Save\n            </button>\n          </Form>\n        </div>\n      )}\n      {!isEditing && (\n        <div>\n          <h2>{state.name}</h2>\n          <button\n            className=\"trail-list-button\"\n            type=\"button\"\n            onClick={() => setIsEditing(true)}\n          >\n            Edit Trail\n          </button>\n          {!isAddingImage && (\n            <button\n              className=\"trail-list-button\"\n              type=\"button\"\n              onClick={() => setIsAddingImage(true)}\n            >\n              Add Image\n            </button>\n          )}\n          {isAddingImage && (\n            <Form onSubmit={addImage}>\n              <ImageForm previewImage={previewImage} />\n              <button className=\"trail-list-button\" type=\"submit\">\n                Save\n              </button>\n            </Form>\n          )}\n          {preview && isAddingImage && (\n            <div className=\"image-wrapper\">\n              <img src={preview} alt=\"preview\" />\n            </div>\n          )}\n          <ul className=\"whitespace\">\n            <li className=\"park-attributes\">\n              <h3>Elevation Gain</h3>\n              <div>{state.elevation_gain}ft</div>\n            </li>\n            <li>\n              <h3>Length</h3>\n              {state.length} miles\n            </li>\n            <li>\n              <div className=\"difficulty-heading\">\n                <h3>Difficulty</h3>\n                {state.difficulty}\n              </div>\n            </li>\n            <li>\n              <h3>Trail Type</h3>\n              {TRAIL_TYPES[state.trail_type]}\n            </li>\n\n            <li>\n              <h3>Description</h3>\n              {state.description}\n            </li>\n            <li>\n              <h3>Park</h3>\n              {state.park.name}\n            </li>\n            <li>\n              <h3>Address</h3>\n              {state.park.address}\n            </li>\n            {state.park.fee && (\n              <li className=\"whitespace\">\n                <h3>Fees</h3>\n                {state.park.fee.replaceAll(\";\", \"\\n\")}\n              </li>\n            )}\n            {state.park.hours && (\n              <li className=\"whitespace\">\n                <h3>Hours</h3>\n                {state.park.hours.replaceAll(\";\", \"\\n\")}\n              </li>\n            )}\n          </ul>\n          <button\n            className=\"trail-list-button\"\n            type=\"button\"\n            onClick={deleteTrail}\n          >\n            Delete Trail\n          </button>\n          {imageHTML}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AdminTrailDetail;\n","import { useOutletContext, Link, useNavigate } from \"react-router-dom\";\nimport { ChangeEvent, useState } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Fuse from \"fuse.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { AdminOutletContext } from \"./Admin\";\nimport { Park, Trail } from \"../../types\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction AdminList() {\n  const { parks, trails } = useOutletContext<AdminOutletContext>();\n\n  const navigate = useNavigate();\n\n  const [searchState, setSearchState] = useState(\"\");\n  const [isSearching, setIsSearching] = useState(false);\n  const [results, setResults] = useState<(Trail | Park)[]>([]);\n\n  if (!parks || !trails) {\n    return <div>Loading...</div>;\n  }\n\n  const parksHTML = parks.map((park) => (\n    <Link\n      style={{ display: \"block\", margin: \"1rem 0\" }}\n      to={`park/${park.id}`}\n      key={park.id}\n    >\n      {park.name}\n    </Link>\n  ));\n\n  const trailsHTML = trails.map((trail) => (\n    <Link\n      style={{ display: \"block\", margin: \"1rem 0\" }}\n      to={`trail/${trail.id}`}\n      key={trail.id}\n    >\n      {trail.name}\n    </Link>\n  ));\n\n  let resultsHtml;\n\n  const options = {\n    isCaseSensitive: false,\n    includeScore: true,\n    shouldSort: true,\n    includeMatches: false,\n    findAllMatches: false,\n    minMatchCharLength: 1,\n    keys: [\"name\"],\n  };\n\n  const fuse = new Fuse([...trails, ...parks], options);\n\n  if (results?.length > 0) {\n    resultsHtml = results.map((item, index) =>\n      \"latitude\" in item ? (\n        <div\n          className=\"result\"\n          key={index}\n          onMouseDown={() => navigate(`park/${item.id}`)}\n        >\n          {item.name}\n        </div>\n      ) : (\n        <div\n          className=\"result\"\n          key={index}\n          onMouseDown={() => navigate(`trail/${item.id}`)}\n        >\n          {item.name}\n        </div>\n      ),\n    );\n  } else {\n    resultsHtml = <div>'No matching trails'</div>;\n  }\n\n  const runSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchState(e.target.value);\n    const data = fuse.search(e.target.value);\n    const newData = data.map((result) => result.item);\n    setResults(newData);\n  };\n\n  return (\n    <div className=\"admin-list-wrapper\">\n      <div className=\"full-width search\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          onChange={runSearch}\n          name=\"search\"\n          value={searchState}\n          onFocus={() => setIsSearching(true)}\n          onBlur={() => {\n            setIsSearching(false);\n            setSearchState(\"\");\n          }}\n          autoComplete=\"off\"\n          placeholder=\"search trails\"\n        />\n        <FontAwesomeIcon\n          className=\"search-icon gray-font\"\n          icon={faMagnifyingGlass}\n        />\n        <div\n          className={isSearching ? \"search-results\" : \"hidden search-results\"}\n        >\n          {isSearching && resultsHtml}\n        </div>\n      </div>\n      <Accordion className=\"admin-list\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>Parks</Accordion.Header>\n          <Accordion.Body>\n            <ul>{parksHTML}</ul>\n          </Accordion.Body>\n        </Accordion.Item>\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>Trails</Accordion.Header>\n          <Accordion.Body>\n            <ul>{trailsHTML}</ul>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default AdminList;\n","import { handleError } from \"../../util\";\nimport Cookies from \"js-cookie\";\nimport { Dispatch, useState, ChangeEvent } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport Form from \"react-bootstrap/Form\";\nimport ImageForm from \"../ImageForm\";\nimport React from \"react\";\nimport { FormEvent } from \"react\";\nimport { FEEDBACK_CHECKBOX_OPTIONS, RADIO_OPTIONS } from \"../../constants\";\nimport { toString } from \"lodash\";\n\nfunction FeedbackModal({\n  id,\n  show,\n  setShow,\n}: {\n  id: number;\n  show: boolean;\n  setShow: Dispatch<boolean>;\n}) {\n  const handleClose = () => {\n    setShow(false);\n  };\n  const [image, setImage] = useState<Maybe<File>>(null);\n  const [preview, setPreview] = useState<Maybe<string>>(null);\n\n  const initialFeedback = FEEDBACK_CHECKBOX_OPTIONS.reduce(\n    (prevValue, currentValue) => ({ ...prevValue, [currentValue]: false }),\n    {},\n  );\n\n  const radioKey = Object.keys(RADIO_OPTIONS);\n  const radioValues = Object.values(RADIO_OPTIONS);\n\n  const initialRadioOptions = radioKey.reduce(\n    (prevValue, currentValue) => ({ ...prevValue, [currentValue]: \"\" }),\n    {},\n  );\n\n  const [checkedState, setCheckedState] =\n    useState<Record<string, boolean>>(initialFeedback);\n  const [radioState, setRadioState] = useState(initialRadioOptions);\n\n  const handleFeedback = (e: ChangeEvent<HTMLInputElement>) => {\n    const key = e.target?.name;\n    const value = e.target?.checked;\n    setCheckedState((prevState) => ({ ...prevState, [key]: value }));\n  };\n  const handleRadioInput = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setRadioState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const previewImage = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    setImage(file!);\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreview(reader.result as string);\n    };\n    reader.readAsDataURL(file!);\n  };\n\n  const submitFeedback = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const token = Cookies.get(\"csrftoken\");\n\n    const submit = { ...radioState, ...checkedState, trail: id };\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": token!,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(submit),\n    };\n\n    const response = await fetch(\"/api/v1/trails/feedback/\", options).catch(\n      handleError,\n    );\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    if (image && response) {\n      const formData = new FormData();\n      formData.append(\"trail\", toString(id));\n      formData.append(\"image\", image);\n\n      const options2 = {\n        method: \"POST\",\n        headers: {\n          \"X-CSRFToken\": token!,\n        },\n        body: formData,\n      };\n\n      const response2 = await fetch(\"/api/v1/trails/photos/\", options2).catch(\n        handleError,\n      );\n\n      if (!response2?.ok) {\n        throw new Error(\"Network response not ok\");\n      }\n\n      setPreview(null);\n      setImage(null);\n    }\n    handleClose();\n  };\n\n  const checkboxHtml = FEEDBACK_CHECKBOX_OPTIONS.map((option, index) => {\n    let displayValue = option.replaceAll(\"_\", \" \");\n    return (\n      <div className=\"checkbox\" key={index}>\n        <input\n          onClick={(e) =>\n            handleFeedback(e as unknown as ChangeEvent<HTMLInputElement>)\n          }\n          className=\"checkbox\"\n          type=\"checkbox\"\n          id={option}\n          name={option}\n          checked={checkedState.option}\n        />\n        <label htmlFor={option}>{displayValue}</label>\n      </div>\n    );\n  });\n\n  const printButtons = (obj: Record<string, any>, index: number) => {\n    let data = [];\n\n    for (const [key, value] of Object.entries(obj)) {\n      let button = (\n        <div className=\"set\" key={key}>\n          <input\n            type=\"radio\"\n            name={radioKey[index]}\n            value={key}\n            id={value}\n            onChange={handleRadioInput}\n          />\n          <label htmlFor={value}>{value}</label>\n        </div>\n      );\n      data.push(button);\n    }\n\n    return data;\n  };\n\n  function formatRadioHeader(title: string) {\n    if (title === \"pet_stance\") {\n      return \"Pets\";\n    } else {\n      let formattedTitle = title[0].toUpperCase() + title.slice(1);\n      return formattedTitle.replace(\"_\", \" \");\n    }\n  }\n\n  const radioHtml = radioValues.map((obj, index) => (\n    <div className=\"set-wrapper\" key={index}>\n      <h3>{formatRadioHeader(radioKey[index])}</h3>\n      <div className=\"radio-buttons\">{printButtons(obj, index)}</div>\n    </div>\n  ));\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton></Modal.Header>\n      <Modal.Body>\n        <p>\n          Any feedback or photos you'd like to provide helps other hikers know\n          what to expect.\n        </p>\n        <Form onSubmit={submitFeedback}>\n          <h2>Select any that apply</h2>\n          <div className=\"checkboxes\">{checkboxHtml}</div>\n          {radioHtml}\n          <h3 className=\"\">Share a photo of the trail</h3>\n          <div className=\"feedback-form-image-input\">\n            <ImageForm previewImage={previewImage} />\n          </div>\n          {preview && (\n            <div className=\"image-wrapper\">\n              <img src={preview} alt=\"preview\" />\n            </div>\n          )}\n          <button className=\"feedback-button\" type=\"submit\">\n            Submit\n          </button>\n        </Form>\n      </Modal.Body>\n\n      <button className=\"close-modal\" type=\"button\" onClick={handleClose}>\n        Close\n      </button>\n    </Modal>\n  );\n}\n\nexport default FeedbackModal;\n","import { handleError, handleInput } from \"../../util\";\nimport Cookies from \"js-cookie\";\nimport { ChangeEvent, Dispatch, FormEvent, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport React from \"react\";\nimport { NavigateFunction } from \"react-router\";\n\nfunction LoginModal({\n  trailId,\n  show,\n  setShow,\n  setAdmin,\n  setAuth,\n  navigate,\n  setShowRegister,\n}: {\n  trailId: Maybe<string>;\n  show: boolean;\n  setShow: Dispatch<boolean>;\n  setAdmin: Dispatch<boolean>;\n  setAuth: Dispatch<boolean>;\n  navigate: NavigateFunction;\n  setShowRegister: Dispatch<boolean>;\n}) {\n  const INITIAL_STATE = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const [error, setError] = useState(false);\n  const [state, setState] = useState(INITIAL_STATE);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const switchView = () => {\n    setShow(false);\n    setShowRegister(true);\n  };\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n      body: JSON.stringify(state),\n    };\n\n    const response = await fetch(\"/rest-auth/login/\", options).catch(\n      handleError,\n    );\n\n    if (!response?.ok) {\n      const message = await response?.json();\n      if (message.non_field_errors) {\n        setError(message.non_field_errors[0]);\n      }\n      throw new Error(\"Network response not ok\");\n    } else {\n      const data = await response.json();\n      Cookies.set(\"Authorization\", `Token ${data.key}`);\n      if (data.is_superuser) {\n        setAdmin(true);\n      }\n      setAuth(true);\n    }\n    navigate(`/plan/${trailId}`);\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        Login to save your trip details for later!\n      </Modal.Header>\n      <Modal.Body>\n        {error && <div className=\"error-message\">{error}</div>}\n        <Form className=\"modal-form\" onSubmit={handleSubmit}>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            id=\"username\"\n            required\n            autoComplete=\"off\"\n            name=\"username\"\n            value={state.username}\n            onChange={(e) =>\n              handleInput(\n                e as unknown as ChangeEvent<HTMLInputElement>,\n                setState,\n              )\n            }\n          />\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            id=\"password\"\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={state.password}\n            onChange={(e) =>\n              handleInput(\n                e as unknown as ChangeEvent<HTMLInputElement>,\n                setState,\n              )\n            }\n          />\n          <button className=\"trail-list-button form-submit\" type=\"submit\">\n            Sign in\n          </button>\n        </Form>\n      </Modal.Body>\n\n      <button\n        type=\"button\"\n        value=\"registration\"\n        onClick={() => switchView()}\n        className=\"verification-redirect-modal\"\n      >\n        I need to make an account\n      </button>\n    </Modal>\n  );\n}\n\nexport default LoginModal;\n","import { handleError, handleInput } from \"../../util\";\nimport Cookies from \"js-cookie\";\nimport { ChangeEvent, Dispatch, FormEvent, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport React from \"react\";\nimport { NavigateFunction } from \"react-router\";\n\nfunction RegisterModal({\n  trailId,\n  show,\n  setShow,\n  setAuth,\n  navigate,\n  setShowLogin,\n}: {\n  trailId: Maybe<string>;\n  show: boolean;\n  setShow: Dispatch<boolean>;\n  setAuth: Dispatch<boolean>;\n  navigate: NavigateFunction;\n  setShowLogin: Dispatch<boolean>;\n}) {\n  const INITIAL_STATE = {\n    username: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n  };\n\n  const [state, setState] = useState(INITIAL_STATE);\n\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const switchView = () => {\n    setShow(false);\n    setShowLogin(true);\n  };\n\n  const [errors, setErrors] = useState({\n    email: false,\n    password1: false,\n    password2: false,\n  });\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (state.password1 === state.password2) {\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        },\n        body: JSON.stringify(state),\n      };\n\n      const response = await fetch(\"/rest-auth/registration/\", options).catch(\n        handleError,\n      );\n\n      if (!response?.ok) {\n        const message = await response?.json();\n        for (const [key, value] of Object.entries(message)) {\n          setErrors((prevState) => ({\n            ...prevState,\n            [key]: (value as string[])[0],\n          }));\n        }\n      } else {\n        const data = await response.json();\n        Cookies.set(\"Authorization\", `Token ${data.key}`);\n        setAuth(true);\n        navigate(`/plan/${trailId}`);\n      }\n    } else {\n      alert(\"passwords must match\");\n    }\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>Create an account</Modal.Header>\n      <Modal.Body>\n        <Form className=\"modal-form\" onSubmit={handleSubmit}>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            id=\"username\"\n            required\n            autoComplete=\"off\"\n            name=\"username\"\n            value={state.username}\n            onChange={(e) =>\n              handleInput(\n                e as unknown as ChangeEvent<HTMLInputElement>,\n                setState,\n              )\n            }\n          />\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          {errors.email && <div className=\"error-label\">{errors.email}</div>}\n          <Form.Control\n            className={errors.email ? \"error\" : \"\"}\n            id=\"email\"\n            required\n            name=\"email\"\n            value={state.email}\n            onChange={(e) =>\n              handleInput(\n                e as unknown as ChangeEvent<HTMLInputElement>,\n                setState,\n              )\n            }\n          />\n          <Form.Label htmlFor=\"password1\">Password</Form.Label>\n          {errors.password1 && (\n            <div className=\"error-label\">{errors.password1}</div>\n          )}\n          <Form.Control\n            className={errors.password1 ? \"error\" : \"\"}\n            id=\"password1\"\n            required\n            autoComplete=\"off\"\n            name=\"password1\"\n            value={state.password1}\n            onChange={(e) =>\n              handleInput(\n                e as unknown as ChangeEvent<HTMLInputElement>,\n                setState,\n              )\n            }\n            type=\"password\"\n          />\n          <Form.Label htmlFor=\"password2\">Password</Form.Label>\n          {errors.password2 && (\n            <div className=\"error-label\">{errors.password2}</div>\n          )}\n          <Form.Control\n            className={errors.password2 ? \"error\" : \"\"}\n            id=\"password2\"\n            required\n            autoComplete=\"off\"\n            name=\"password2\"\n            value={state.password2}\n            onChange={(e) =>\n              handleInput(\n                e as unknown as ChangeEvent<HTMLInputElement>,\n                setState,\n              )\n            }\n            type=\"password\"\n          />\n          <button className=\"trail-list-button form-submit\" type=\"submit\">\n            Register\n          </button>\n        </Form>\n      </Modal.Body>\n      <button\n        type=\"button\"\n        value=\"login\"\n        onClick={() => switchView()}\n        className=\"verification-redirect-modal\"\n      >\n        Login to exisiting account\n      </button>\n    </Modal>\n  );\n}\n\nexport default RegisterModal;\n","import { MapContainer, TileLayer, Marker } from \"react-leaflet\";\nimport Modal from \"react-bootstrap/Modal\";\nimport html2canvas from \"html2canvas\";\nimport React, { Dispatch, FormEvent } from \"react\";\n\nfunction Map({\n  latitude,\n  longitude,\n  show,\n  setShow,\n}: {\n  latitude: number;\n  longitude: number;\n  show: boolean;\n  setShow: Dispatch<boolean>;\n}) {\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const downloadMap = async (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    if (!document?.querySelector(\"#capture\")) {\n      return;\n    }\n\n    const canvas = await html2canvas(document.querySelector(\"#capture\")!, {\n      useCORS: true,\n    });\n\n    const url = canvas.toDataURL();\n\n    function download(url: any) {\n      let link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"map.png\";\n\n      document.body.appendChild(link);\n\n      document.body.removeChild(link);\n    }\n\n    download(url);\n  };\n\n  const popupHtml = <Marker position={[latitude, longitude]}></Marker>;\n\n  return (\n    <Modal dialogClassName=\"modal-90w\" show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <button\n          id=\"download-link\"\n          className=\"download-button\"\n          onClick={(e) => downloadMap(e)}\n        >\n          Download Map\n        </button>\n      </Modal.Header>\n      <Modal.Body id=\"capture\">\n        <MapContainer center={[latitude, longitude]} zoom={14}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {popupHtml}\n        </MapContainer>\n      </Modal.Body>\n      <button className=\"close-modal\" type=\"button\" onClick={handleClose}>\n        Close\n      </button>\n    </Modal>\n  );\n}\nexport default Map;\n","import { useParams, Link, useOutletContext } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { convertWindDegrees, getWeatherIcons } from \"../../util\";\nimport FeedbackModal from \"./FeedbackModal\";\nimport { OverlayTrigger, Tooltip, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleQuestion, faMap } from \"@fortawesome/free-solid-svg-icons\";\nimport LoginModal from \"./LoginModal\";\nimport RegisterModal from \"./RegisterModal\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport MapModal from \"./MapModal\";\nimport React from \"react\";\nimport { OutletContext } from \"../App/App\";\nimport { fetchWrapper } from \"./../../fetch\";\nimport { Trail, Image, Park, Weather } from \"../../types\";\nimport {\n  DIFFICULTY_KEY,\n  FEEDBACK_CHECKBOX_OPTIONS,\n  RADIO_OPTIONS,\n  TRAIL_TYPES,\n} from \"../../constants\";\nimport { toNumber } from \"lodash\";\n\ntype State = Trail & {\n  park: Park;\n  weather: Weather;\n};\n\nfunction TrailDetail() {\n  const { navigate, auth, setAuth, setAdmin } =\n    useOutletContext<OutletContext>();\n\n  const params = useParams();\n\n  const [state, setState] = useState<Maybe<State>>(null);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [showMap, setShowMap] = useState(false);\n  const [imageList, setImageList] = useState<Image[]>([]);\n\n  const handleOpenFeedback = () => {\n    setShowFeedback(true);\n  };\n  const handleOpenLogin = () => {\n    setShowLogin(true);\n  };\n  const handleOpenMap = () => {\n    setShowMap(true);\n  };\n\n  const getImages = async (id: string) => {\n    const url = `/api/v1/trails/photos/trailId/${id}/`;\n    const images = await fetchWrapper(url);\n\n    setImageList(images);\n  };\n\n  useEffect(() => {\n    const getTrail = async () => {\n      const url = `/api/v1/trails/${params.trailId}/`;\n\n      const trail = await fetchWrapper(url);\n\n      setState(trail);\n\n      if (trail) {\n        getImages(trail.id);\n      }\n    };\n    getTrail();\n  }, [params.trailId]);\n\n  if (!state) {\n    return <div>Loading...</div>;\n  }\n\n  const difficultyMap = DIFFICULTY_KEY.map((entry) => (\n    <div key={entry.level}>\n      <h3>{`Level ${entry.level}`}</h3>\n      {entry.description}\n    </div>\n  ));\n\n  const difficultyHtml = (\n    <div className=\"levels\">\n      Difficulty is based on total length and elevation gain.\n      {difficultyMap}\n    </div>\n  );\n\n  const renderTooltip = (props: any) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      <div className=\"tip\">{difficultyHtml}</div>\n    </Tooltip>\n  );\n\n  let weatherHtml;\n\n  if (typeof state.weather != typeof \"string\") {\n    weatherHtml = state.weather.daily?.map((day, index) => {\n      let date = new Date(day.dt);\n      return (\n        <div key={index} className=\"scroll-squares whitespace\">\n          <h4>\n            {date\n              .toLocaleDateString(undefined, {\n                weekday: \"long\",\n                month: \"numeric\",\n                day: \"numeric\",\n              })\n              .replace(\",\", \"\\n\")}\n          </h4>\n          <div className=\"weather-icon\">\n            {getWeatherIcons(day.weather[0].description)}\n          </div>\n          <p className=\"temp\">{day.temp.day.toFixed(0)} F</p>\n          <p>{day.weather[0].description}</p>\n          <p>\n            Winds {\"\\n\" + day.wind_speed.toFixed(0)}{\" \"}\n            {convertWindDegrees(day.wind_deg)}\n          </p>\n        </div>\n      );\n    });\n  }\n\n  let feedbackHtml;\n\n  if (Object.values(state).includes(true)) {\n    feedbackHtml = FEEDBACK_CHECKBOX_OPTIONS.filter((option) => state[option])\n      .map((option) => option.replaceAll(\"_\", \" \"))\n      .map((option, index) => (\n        <div className=\"feedback-badge\" key={index}>\n          {option}\n        </div>\n      ));\n  }\n\n  const printRadioFeedback = () => {\n    let data = [];\n\n    for (const [key, value] of Object.entries(RADIO_OPTIONS)) {\n      let variable = state[key as keyof typeof RADIO_OPTIONS] as string;\n\n      if (variable) {\n        //@ts-ignore\n        const string = value[variable];\n\n        let displayValue = (\n          <div className=\"feedback-badge\" key={key}>\n            {string}\n          </div>\n        );\n        data.push(displayValue);\n      }\n    }\n    if (data.length > 0) {\n      return data;\n    } else {\n      return null;\n    }\n  };\n\n  let imageHtml;\n  if (imageList.length > 0) {\n    imageHtml = imageList.map((image) => (\n      <div className=\"trail-image-wrapper\" key={image.id}>\n        <img className=\"absolute\" src={image.image} alt=\"trail\" />\n      </div>\n    ));\n  }\n\n  const radioFeedbackHtml = printRadioFeedback();\n\n  return (\n    <div className=\"trail\">\n      <h2 className=\"top-h2\">{state.name}</h2>\n      <div className=\"desktop trail-buttons\">\n        {auth && (\n          <Link className=\"trail-list-button\" to={`/plan/${state.id}`}>\n            Plan a trip to {state.name}\n          </Link>\n        )}\n        {!auth && (\n          <button\n            className=\"trail-list-button\"\n            type=\"button\"\n            onClick={handleOpenLogin}\n          >\n            Plan a trip to {state.name}\n          </button>\n        )}\n      </div>\n      <button\n        className=\"trail-list-button map-button\"\n        type=\"button\"\n        onClick={handleOpenMap}\n      >\n        Map <FontAwesomeIcon icon={faMap} />\n      </button>\n      {imageList.length > 0 && (\n        <div className=\"horizontal-scroll-wrapper trail-images\">\n          {imageHtml}\n        </div>\n      )}\n      <ul>\n        <li>\n          <h3>Elevation gain</h3>\n          {state.elevation_gain} ft\n        </li>\n        <li>\n          <h3>Length</h3>\n          {state.length} miles\n        </li>\n        <li>\n          <div className=\"difficulty-heading\">\n            <h3>Difficulty</h3>\n            <OverlayTrigger\n              placement=\"right\"\n              delay={{ show: 250, hide: 400 }}\n              overlay={renderTooltip}\n              trigger={[\"hover\", \"focus\"]}\n            >\n              <Button variant=\"success\">\n                <FontAwesomeIcon icon={faCircleQuestion} />\n              </Button>\n            </OverlayTrigger>\n          </div>\n          <div>{state.difficulty}</div>\n        </li>\n        <li>\n          <h3>Trail Type</h3>\n          {TRAIL_TYPES[state.trail_type]}\n        </li>\n      </ul>\n      <h3 className=\"park-name-detail\">{state.park.name}</h3>\n      <ul className=\"bottom-ul\">\n        <li>\n          <h3>Address</h3>\n          {state.park.address}\n        </li>\n        {state.park.fee && (\n          <li className=\"whitespace\">\n            <h3>Fees</h3>\n            {state.park.fee.replaceAll(\";\", \"\\n\").replaceAll(\"/\", \" \")}\n          </li>\n        )}\n        {state.park.hours && (\n          <li className=\"whitespace\">\n            <h3>Hours</h3>\n            {state.park.hours.replaceAll(\";\", \"\\n\")}\n          </li>\n        )}\n      </ul>\n      <Accordion className=\"trail-description\">\n        <Accordion.Header className=\"trail-description\">\n          Trail Description\n        </Accordion.Header>\n        <Accordion.Body>{state.description}</Accordion.Body>\n      </Accordion>\n      {(feedbackHtml || radioFeedbackHtml) && (\n        <h3>Other hikers say this trail...</h3>\n      )}\n      {(feedbackHtml || radioFeedbackHtml) && (\n        <div className=\"feedback-wrapper\">\n          {feedbackHtml && feedbackHtml}\n          {radioFeedbackHtml && radioFeedbackHtml}\n        </div>\n      )}\n      <div className=\"mobile plan-trip-container\">\n        {auth && (\n          <div className=\"plan-trip-link-container\">\n            <Link to={`/plan/${state.id}`}>Plan a trip to {state.name}</Link>\n          </div>\n        )}\n        {!auth && (\n          <button\n            type=\"button\"\n            className=\"plan-trip-button\"\n            onClick={handleOpenLogin}\n          >\n            Plan a trip to {state.name}\n          </button>\n        )}\n      </div>\n      {weatherHtml && (\n        <div className=\"weather trip-form-weather\">\n          <h3>Weather</h3>\n          <div className=\"horizontal-scroll-wrapper\">{weatherHtml}</div>\n        </div>\n      )}\n\n      {auth && (\n        <div className=\"feedback-prompt-wrapper\">\n          <div className=\"question-wrapper\">\n            <h3>Have you hiked {state.name}?</h3>\n          </div>\n          <button\n            type=\"button\"\n            className=\"feedback-prompt\"\n            onClick={handleOpenFeedback}\n          >\n            Let us know how it was!\n          </button>\n        </div>\n      )}\n\n      <MapModal\n        latitude={toNumber(state.park.latitude)}\n        longitude={toNumber(state.park.longitude)}\n        show={showMap}\n        setShow={setShowMap}\n      />\n      <FeedbackModal\n        id={state.id}\n        show={showFeedback}\n        setShow={setShowFeedback}\n      />\n      <LoginModal\n        trailId={state.id}\n        show={showLogin}\n        setShow={setShowLogin}\n        navigate={navigate}\n        setAuth={setAuth}\n        setAdmin={setAdmin}\n        setShowRegister={setShowRegister}\n      />\n      <RegisterModal\n        trailId={state.id}\n        show={showRegister}\n        setShow={setShowRegister}\n        navigate={navigate}\n        setAuth={setAuth}\n        setShowLogin={setShowLogin}\n      />\n    </div>\n  );\n}\n\nexport default TrailDetail;\n","import { useParams, Link, useOutletContext } from \"react-router-dom\";\nimport { ChangeEvent, useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport { handleError } from \"../../util\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { MapContainer, TileLayer, Popup, Marker } from \"react-leaflet\";\nimport LoginModal from \"./LoginModal\";\nimport RegisterModal from \"./RegisterModal\";\nimport React from \"react\";\nimport { OutletContext } from \"../App/App\";\nimport { toString } from \"lodash\";\nimport { LatLngTuple } from \"leaflet\";\nimport { Park } from \"../../types\";\nimport { TRAIL_TYPES } from \"../../constants\";\nimport { toNumber } from \"lodash\";\n\nfunction ParkDetail() {\n  const params = useParams();\n\n  const { navigate, auth, setAuth, setAdmin } =\n    useOutletContext<OutletContext>();\n\n  const [state, setState] = useState<Maybe<Park>>(null);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [trailId, setTrailId] = useState<Maybe<string>>(null);\n\n  const handleOpenLogin = (e: ChangeEvent<HTMLButtonElement>) => {\n    setTrailId(e.target?.value);\n    setShowLogin(true);\n  };\n\n  useEffect(() => {\n    const getPark = async () => {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        },\n      };\n\n      const response = await fetch(\n        `/api/v1/trails/park/${params.parkId}/`,\n        options,\n      ).catch(handleError);\n\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      }\n      const park = await response.json();\n      setState(park);\n    };\n    getPark();\n  }, [params.parkId]);\n\n  if (!state) {\n    return <div>Loading...</div>;\n  }\n\n  const trailHtml = state.trails.map((trail, index) => (\n    <Accordion.Item eventKey={toString(index)} key={index}>\n      <Accordion.Header>{trail.name}</Accordion.Header>\n      <Accordion.Body>\n        <ul>\n          <li>\n            <h4>Length</h4>\n            {trail.length.slice(-1) === \"0\"\n              ? trail.length.slice(0, -1)\n              : trail.length}{\" \"}\n            miles\n          </li>\n          <li>\n            <h4>Elevation gain</h4>\n            {trail.elevation_gain} feet\n          </li>\n          <li>\n            <h4>Trail type</h4>\n            {TRAIL_TYPES[trail.trail_type]}\n          </li>\n        </ul>\n        <div className=\"trail-list-buttons\">\n          <Link className=\"trail-list-button\" to={`/trail/${trail.id}`}>\n            See More\n          </Link>\n          {auth && (\n            <Link className=\"trail-list-button\" to={`/plan/${trail.id}`}>\n              Plan a trip\n            </Link>\n          )}\n          {!auth && (\n            <button\n              className=\"trail-list-button\"\n              type=\"button\"\n              value={trail.id}\n              onClick={(e) =>\n                handleOpenLogin(e as unknown as ChangeEvent<HTMLButtonElement>)\n              }\n            >\n              Plan a trip\n            </button>\n          )}\n        </div>\n      </Accordion.Body>\n    </Accordion.Item>\n  ));\n\n  const position: LatLngTuple = [\n    toNumber(state.latitude),\n    toNumber(state.longitude),\n  ];\n\n  return (\n    <div className=\"wrapper park\">\n      <h2>{state.name}</h2>\n      <MapContainer center={position} zoom={13}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position}>\n          <Popup>{state.name}</Popup>\n        </Marker>\n      </MapContainer>\n      <ul>\n        <li className=\"park-attributes\">\n          <h3>Address</h3>\n          <div>{state.address}</div>\n        </li>\n        {state.hours && (\n          <li className=\"park-attributes\">\n            <h3>Hours</h3>\n            <div>{state.hours.replaceAll(\";\", \"\\n\")}</div>\n          </li>\n        )}\n        {state.fee && (\n          <li className=\"park-attributes\">\n            <h3>Fees</h3>\n            <div>{state.fee.replaceAll(\";\", \"\\n\").replaceAll(\"/\", \" \")}</div>\n          </li>\n        )}\n        {state.activities && (\n          <li className=\"park-attributes\">\n            <h3>Activites</h3>\n            <div>{state.activities}</div>\n          </li>\n        )}\n      </ul>\n      <h3>Trails</h3>\n      <Accordion>{trailHtml}</Accordion>\n      <LoginModal\n        trailId={trailId}\n        show={showLogin}\n        setShow={setShowLogin}\n        navigate={navigate}\n        setAuth={setAuth}\n        setAdmin={setAdmin}\n        setShowRegister={setShowRegister}\n      />\n      <RegisterModal\n        trailId={trailId}\n        show={showRegister}\n        setShow={setShowRegister}\n        navigate={navigate}\n        setAuth={setAuth}\n        setShowLogin={setShowLogin}\n      />\n    </div>\n  );\n}\n\nexport default ParkDetail;\n","import React, { ChangeEvent, useState } from \"react\";\n\nexport function TimeInput({\n  setFormState,\n  formState,\n}: {\n  setFormState: any;\n  formState: Maybe<{\n    time: Maybe<string>;\n  }>;\n}) {\n  let INITIAL_VALUE = {\n    hr: \"--\",\n    min: \"--\",\n    amPm: \"--\",\n  };\n  if (formState && formState.time != null) {\n    const oldTime = formState.time;\n\n    INITIAL_VALUE.hr = oldTime.slice(0, 2);\n    INITIAL_VALUE.min = oldTime.slice(3, 5);\n    INITIAL_VALUE.amPm = oldTime.slice(6, 8);\n  }\n\n  const [state, setState] = useState<{ hr: string; min: string; amPm: string }>(\n    INITIAL_VALUE,\n  );\n\n  const handleInput = (e: ChangeEvent<HTMLSelectElement>) => {\n    const newTime = { ...state, [e.target.name]: e.target.value };\n    setState(newTime);\n    setFormState((prevState: typeof INITIAL_VALUE) => ({\n      ...prevState,\n      time: newTime.hr + \":\" + newTime.min + \" \" + newTime.amPm,\n    }));\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"hour\"></label>\n      <select\n        className=\"time-select form-control\"\n        name=\"hr\"\n        id=\"hour\"\n        onChange={handleInput}\n        value={state.hr}\n      >\n        <option value=\"--\">--</option>\n        <option value=\"01\">1</option>\n        <option value=\"02\">2</option>\n        <option value=\"03\">3</option>\n        <option value=\"04\">4</option>\n        <option value=\"05\">5</option>\n        <option value=\"06\">6</option>\n        <option value=\"07\">7</option>\n        <option value=\"08\">8</option>\n        <option value=\"09\">9</option>\n        <option value=\"10\">10</option>\n        <option value=\"11\">11</option>\n        <option value=\"12\">12</option>\n      </select>\n      <label htmlFor=\"minute\"></label>\n      <select\n        className=\"time-select form-control\"\n        name=\"min\"\n        id=\"minute\"\n        onChange={handleInput}\n        value={state.min}\n      >\n        <option value=\"--\">--</option>\n        <option value=\"00\">00</option>\n        <option value=\"30\">30</option>\n      </select>\n      <label htmlFor=\"Am/Pm\"></label>\n      <select\n        className=\"time-select form-control\"\n        name=\"amPm\"\n        id=\"Am/Pm\"\n        onChange={handleInput}\n        value={state.amPm}\n      >\n        <option value=\"--\">--</option>\n        <option value=\"AM\">AM</option>\n        <option value=\"PM\">PM</option>\n      </select>\n      <span className=\"optional\">optional</span>\n    </div>\n  );\n}\n","import { useParams, useNavigate } from \"react-router-dom\";\nimport { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport {\n  handleError,\n  handleInput,\n  convertWindDegrees,\n  getWeatherIcons,\n} from \"../../util\";\nimport Form from \"react-bootstrap/Form\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport MapModal from \"./MapModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMap } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport {\n  FEEDBACK_CHECKBOX_OPTIONS,\n  RADIO_OPTIONS,\n  TRAIL_TYPES,\n} from \"../../constants\";\nimport { Park, Trail, Weather } from \"../../types\";\nimport { TimeInput } from \"../../TimeInput\";\nimport { toNumber } from \"lodash\";\n\nfunction TripForm() {\n  const navigate = useNavigate();\n  const [showMap, setShowMap] = useState(false);\n\n  const handleOpenMap = () => {\n    setShowMap(true);\n  };\n\n  const INITIAL_STATE = {\n    trail: null,\n    date: \"\",\n    time: \"--:--\",\n    notes: \"\",\n  };\n\n  type TrailState = Trail & {\n    weather: Weather;\n    park: Park;\n  };\n\n  const params = useParams();\n  const [trail, setTrail] = useState<Maybe<TrailState>>(null);\n  const [state, setState] = useState<{\n    trail: Maybe<TrailState>;\n    date: string;\n    time: Maybe<string>;\n    notes: string;\n    pet_stance?: \"df\" | \"npa\";\n    parking?: \"lpark\" | \"apark\";\n    cell_strength?: \"ncell\" | \"wcell\" | \"scell\";\n    bathrooms?: \"nbath\" | \"cbath\" | \"dbath\";\n  }>(INITIAL_STATE);\n\n  useEffect(() => {\n    const getTrail = async () => {\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        },\n      };\n\n      const response = await fetch(\n        `/api/v1/trails/${params.trailId}/`,\n        options,\n      ).catch(handleError);\n\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      }\n\n      const trail = await response.json();\n      setTrail(trail);\n    };\n\n    if (!trail) getTrail();\n  }, [trail, params.trailId]);\n\n  if (!trail) {\n    return <div>Loading...</div>;\n  }\n\n  const submitTrip = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const data = { ...state, trail: trail.id };\n    if (data.time?.includes(\"-\")) {\n      data.time = null;\n    }\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n\n    const response = await fetch(\"/api/v1/trails/trips/\", options).catch(\n      handleError,\n    );\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    setState(INITIAL_STATE);\n    navigate(\"/\");\n  };\n\n  let weatherHtml;\n\n  if (!!trail.weather.daily) {\n    weatherHtml = trail.weather.daily?.map((day, index) => {\n      let date = new Date(day?.dt);\n      return (\n        <div key={index} className=\"scroll-squares whitespace\">\n          <h4>\n            {date\n              .toLocaleDateString(undefined, {\n                weekday: \"long\",\n                month: \"numeric\",\n                day: \"numeric\",\n              })\n              .replace(\",\", \"\\n\")}\n          </h4>\n          <div className=\"weather-icon\">\n            {getWeatherIcons(day?.weather?.[0]?.description)}\n          </div>\n          <p className=\"temp\">{day.temp.day.toFixed(0)} F</p>\n          <p>{day?.weather?.[0]?.description}</p>\n          <p>\n            Winds {\"\\n\" + day?.wind_speed?.toFixed(0)}{\" \"}\n            {convertWindDegrees(day?.wind_deg)}\n          </p>\n        </div>\n      );\n    });\n  }\n\n  let feedbackHtml;\n\n  //@ts-ignore\n  if (Object.values(state).includes(true)) {\n    feedbackHtml = FEEDBACK_CHECKBOX_OPTIONS.filter((option) => trail[option])\n      .map((option) => option.replaceAll(\"_\", \" \"))\n      .map((option, index) => (\n        <div className=\"feedback-badge\" key={index}>\n          {option}\n        </div>\n      ));\n  }\n\n  const printRadioFeedback = () => {\n    let data = [];\n\n    for (const [key, value] of Object.entries(RADIO_OPTIONS)) {\n      let variable = state[key as keyof typeof RADIO_OPTIONS];\n\n      if (variable) {\n        //@ts-ignore\n        const string = value[variable];\n        let displayValue = (\n          <div className=\"feedback-badge\" key={key}>\n            {string}\n          </div>\n        );\n        data.push(displayValue);\n      }\n    }\n    if (data.length > 0) {\n      return data;\n    } else {\n      return null;\n    }\n  };\n\n  const radioFeedbackHtml = printRadioFeedback();\n\n  return (\n    <div className=\"wrapper\">\n      <h2 className=\"trip-title\">Trip to {trail.name}</h2>\n      <div className=\"trail-buttons\">\n        <button\n          className=\"trail-list-button map-button form-map-button\"\n          type=\"button\"\n          onClick={handleOpenMap}\n        >\n          Map <FontAwesomeIcon icon={faMap} />\n        </button>\n      </div>\n      <div className=\"trip-top\">\n        {weatherHtml && (\n          <div className=\"trip-form-weather\">\n            <h3>Weather</h3>\n            <div className=\"horizontal-scroll-wrapper\">{weatherHtml}</div>\n          </div>\n        )}\n        <div className=\"trip-left\">\n          <Form className=\"trip-form\" onSubmit={submitTrip}>\n            <Form.Label htmlFor=\"date\">\n              <h3>Date</h3>\n            </Form.Label>\n            <Form.Control\n              type=\"date\"\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              required\n              name=\"date\"\n              id=\"date\"\n              value={state.date}\n            />\n            <Form.Label htmlFor=\"time\">\n              <h3>Time</h3>\n            </Form.Label>\n            <TimeInput setFormState={setState} formState={state} />\n            <Form.Label htmlFor=\"notes\">\n              <h3>Notes</h3>\n            </Form.Label>\n            <Form.Control\n              className=\"notes\"\n              as=\"textarea\"\n              rows={5}\n              name=\"notes\"\n              id=\"notes\"\n              value={state.notes}\n              onChange={(e) =>\n                handleInput(\n                  e as unknown as ChangeEvent<HTMLInputElement>,\n                  setState,\n                )\n              }\n              placeholder=\"optional\"\n            />\n            <button\n              className=\"trip-form-submit trail-list-button form-submit\"\n              type=\"submit\"\n            >\n              Save Trip\n            </button>\n          </Form>\n        </div>\n        <h2 className=\"trail-details\">Trail Details</h2>\n        <div className=\"trip-bottom\">\n          <ul className=\"trail trip-left\">\n            <li>\n              <h3>Elevation gain</h3>\n              {trail.elevation_gain}ft\n            </li>\n            <li>\n              <h3>Length</h3>\n              {trail.length} miles\n            </li>\n            <li>\n              <h3>Trail Type</h3>\n              {TRAIL_TYPES[trail.trail_type]}\n            </li>\n            <li className=\"whitespace\">\n              <h3>Park</h3>\n              {trail.park.name + \"\\n\"}\n              {trail.park.address}\n            </li>\n\n            {(feedbackHtml || radioFeedbackHtml) && (\n              <li className=\"trip-feedback-wrapper\">\n                <div>\n                  <h3 className=\"full-width\">Other hikers say this trail...</h3>\n                </div>\n                <div className=\"trip-badges-containter\">\n                  {feedbackHtml && feedbackHtml}\n                  {radioFeedbackHtml && radioFeedbackHtml}\n                </div>\n              </li>\n            )}\n          </ul>\n          <div>\n            <ul className=\"trail trip-right\">\n              {trail.park.hours && (\n                <li className=\"whitespace\">\n                  <h3>Hours</h3>\n                  {trail.park.hours.replaceAll(\";\", \"\\n\")}\n                </li>\n              )}\n              {trail.park.fee && (\n                <li className=\"whitespace trip-form-segment\">\n                  <h3>Fees</h3>\n                  {trail.park.fee.replaceAll(\";\", \"\\n\").replaceAll(\"/\", \" \")}\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n      <Accordion>\n        <Accordion.Header>Trail Description</Accordion.Header>\n        <Accordion.Body>{trail.description}</Accordion.Body>\n      </Accordion>\n      <MapModal\n        latitude={toNumber(trail.park.latitude)}\n        longitude={toNumber(trail.park.longitude)}\n        show={showMap}\n        setShow={setShowMap}\n      />\n    </div>\n  );\n}\n\nexport default TripForm;\n","import { useState, useEffect } from \"react\";\nimport {\n  handleError,\n  convertDateFormat,\n  convertTimeFormat,\n  convertDateFormatWithYear,\n} from \"../../util\";\nimport { Link } from \"react-router-dom\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport React from \"react\";\nimport { Trip } from \"../../types\";\n\nfunction Trips() {\n  const [trips, setTrips] = useState<Maybe<Trip[]>>(null);\n\n  useEffect(() => {\n    const getTrips = async () => {\n      const response = await fetch(\"/api/v1/trails/trips/\").catch(handleError);\n      if (!response?.ok) {\n        throw new Error(\"Network response not ok\");\n      } else {\n        const data = await response.json();\n        setTrips(data);\n      }\n    };\n    if (!trips) {\n      getTrips();\n    }\n  }, [trips]);\n\n  if (!trips) {\n    return <div>Loading...</div>;\n  }\n  const currentTime = new Date();\n\n  if (trips.length < 1) {\n    return <div>No trips planned</div>;\n  }\n\n  const upcomingTripsHtml = trips\n    .filter((trip) => new Date(trip.date) > currentTime)\n    .map((trip, index) => (\n      <div key={trip.id}>\n        <Link className=\"trip-link\" to={`/trip/${trip.id}`}>\n          <h3>{trip.trailname}</h3>\n        </Link>\n        <div>\n          <div>{convertDateFormat(trip.date)}</div>\n          <div>{convertTimeFormat(trip.time)}</div>\n        </div>\n      </div>\n    ));\n\n  const pastTripsHtml = trips\n    .filter((trip) => new Date(trip.date) < currentTime)\n    .sort(\n      (item1, item2) =>\n        new Date(item2.date).setHours(0, 0, 0, 0) -\n        new Date(item1.date).setHours(0, 0, 0, 0),\n    )\n    .map((trip, index) => (\n      <li key={trip.id}>\n        <h3>{trip.trailname}</h3>\n        <div>{convertDateFormatWithYear(trip.date)}</div>\n      </li>\n    ));\n\n  return (\n    <div className=\"wrapper\">\n      <h2>Upcoming Trips</h2>\n      <ul>\n        {upcomingTripsHtml.length > 0 ? upcomingTripsHtml : \"No upcoming trips\"}\n      </ul>\n      <div className=\"past-trips\">\n        <Accordion>\n          <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>Past Trips</Accordion.Header>\n            <Accordion.Body>\n              <ul>\n                {pastTripsHtml.length > 0 ? pastTripsHtml : \"No past trips\"}\n              </ul>\n            </Accordion.Body>\n          </Accordion.Item>\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n\nexport default Trips;\n","import { useState, useEffect, ChangeEvent } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport {\n  handleError,\n  handleInput,\n  convertWindDegrees,\n  getWeatherIcons,\n  convertTimeFormat,\n} from \"../../util\";\nimport Cookies from \"js-cookie\";\nimport Form from \"react-bootstrap/Form\";\nimport MapModal from \"./MapModal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencil, faMap } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { fetchWrapper } from \"../../fetch\";\nimport { Trip } from \"../../types\";\nimport { TRAIL_TYPES } from \"../../constants\";\nimport { TimeInput } from \"../../TimeInput\";\nimport { toNumber } from \"lodash\";\n\nfunction TripDetail() {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [state, setState] =\n    useState<\n      Maybe<{ id: string; date: string; time: Maybe<string>; notes: string }>\n    >(null);\n  const [isEditingDate, setIsEditingDate] = useState<boolean>(false);\n  const [isEditingTime, setIsEditingTime] = useState<boolean>(false);\n  const [isEditingNotes, setIsEditingNotes] = useState<boolean>(false);\n  const [trip, setTrip] = useState<Maybe<Trip>>(null);\n\n  const [showMap, setShowMap] = useState(false);\n\n  const handleOpenMap = () => {\n    setShowMap(true);\n  };\n\n  useEffect(() => {\n    const getTripDetails = async () => {\n      const data = await fetchWrapper(`/api/v1/trails/trip/${params.tripId}/`);\n      setTrip(data);\n\n      setState({\n        id: data.id,\n        date: data.date,\n        time: data.time,\n        notes: data.notes,\n      });\n    };\n\n    if (!trip) {\n      getTripDetails();\n    }\n  }, [params.tripId, trip]);\n\n  const editTrip = async (e: ChangeEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    let data = state;\n    if (\n      (data?.time && data.time.includes(\"-\")) ||\n      (data?.time && e.target.name === \"time\" && e.target.id === \"delete\")\n    ) {\n      data.time = null;\n    }\n\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n\n    const response = await fetch(\n      `/api/v1/trails/trip/${state?.id}/`,\n      options,\n    ).catch(handleError);\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    const updatedTrip = await response.json();\n    setTrip(updatedTrip);\n\n    setIsEditingDate(false);\n    setIsEditingTime(false);\n    setIsEditingNotes(false);\n  };\n\n  const deleteTrip = async (e: ChangeEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    const options = {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\")!,\n      },\n    };\n\n    const response = await fetch(\n      `/api/v1/trails/trip/${state?.id}/`,\n      options,\n    ).catch(handleError);\n\n    if (!response?.ok) {\n      throw new Error(\"Network response not ok\");\n    }\n\n    navigate(\"/trips\");\n  };\n\n  if (!trip) {\n    return <div>Loading...</div>;\n  }\n\n  let weatherHtml;\n\n  if (trip.weather.daily) {\n    const data = trip.weather.daily?.[0];\n    let date = new Date(data.dt);\n    weatherHtml = (\n      <div className=\"scroll-squares whitespace\">\n        <h4>\n          {date\n            .toLocaleDateString(undefined, {\n              weekday: \"long\",\n              month: \"numeric\",\n              day: \"numeric\",\n            })\n            .replace(\",\", \"\\n\")}\n        </h4>\n        <div className=\"weather-icon\">\n          {getWeatherIcons(data.weather[0].description)}\n        </div>\n        <p className=\"temp\">{data.temp.day.toFixed(0)} F</p>\n        <p>\n          Winds {\"\\n\" + data.wind_speed.toFixed(0)}{\" \"}\n          {convertWindDegrees(data.wind_deg)}\n        </p>\n        <p>{data.weather[0].description}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <Link className=\"link\" to={`/trail/${trip.trail.id}/`}>\n        <h2 className=\"max-75\">Trip to {trip.trailname}</h2>\n      </Link>\n      <div className=\"trail-buttons\">\n        <button\n          className=\"mobile trail-list-button map-button\"\n          type=\"button\"\n          onClick={handleOpenMap}\n        >\n          Map <FontAwesomeIcon icon={faMap} />\n        </button>\n        <button\n          className=\"trail-list-button desktop map-button trip-detail-map\"\n          type=\"button\"\n          onClick={handleOpenMap}\n        >\n          Map <FontAwesomeIcon icon={faMap} />\n        </button>\n      </div>\n      <div className=\"trail-top\">\n        <div className=\"trip-details\">\n          <h3>Trip Details</h3>\n          {!isEditingDate && (\n            <div className=\"trip-detail\">\n              <div className=\"flex\">\n                <h4>Date</h4>\n                <button\n                  type=\"button\"\n                  className=\"icon-button\"\n                  onClick={() => setIsEditingDate(true)}\n                >\n                  <FontAwesomeIcon icon={faPencil} />\n                </button>\n              </div>\n              {trip.date}\n            </div>\n          )}\n          {isEditingDate && (\n            <div className=\"trip-detail\">\n              <Form\n                onSubmit={(e) =>\n                  editTrip(e as unknown as ChangeEvent<HTMLButtonElement>)\n                }\n              >\n                <Form.Label htmlFor=\"date\">Calendar</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  onChange={(e) =>\n                    handleInput(\n                      e as unknown as ChangeEvent<HTMLInputElement>,\n                      setState,\n                    )\n                  }\n                  required\n                  name=\"date\"\n                  id=\"date\"\n                  value={state?.date}\n                />\n                <button type=\"submit\" className=\"trail-list-button\">\n                  Save\n                </button>\n              </Form>\n            </div>\n          )}\n          {!isEditingTime && trip.time === null && (\n            <div className=\"trip-detail\">\n              <h4>Time</h4>\n              {convertTimeFormat(trip.time)}\n              <button\n                type=\"button\"\n                className=\"icon-button\"\n                onClick={() => setIsEditingTime(true)}\n              >\n                Add Time\n              </button>\n            </div>\n          )}\n          {!isEditingTime && trip.time !== null && (\n            <div className=\"trip-detail\">\n              <div className=\"flex\">\n                <h4>Time</h4>\n                <button\n                  type=\"button\"\n                  className=\"icon-button\"\n                  onClick={() => setIsEditingTime(true)}\n                >\n                  {\" \"}\n                  <FontAwesomeIcon icon={faPencil} />\n                </button>\n              </div>\n              {convertTimeFormat(trip.time)}\n            </div>\n          )}\n          {isEditingTime && trip.time === null && (\n            <div className=\"trip-detail\">\n              <h4>Time</h4>\n              <Form\n                onSubmit={(e) =>\n                  editTrip(e as unknown as ChangeEvent<HTMLButtonElement>)\n                }\n              >\n                <TimeInput setFormState={setState} formState={state} />\n                <button type=\"submit\" className=\"trail-list-button\">\n                  Save\n                </button>\n              </Form>\n            </div>\n          )}\n          {isEditingTime && trip.time != null && (\n            <div className=\"trip-detail\">\n              <h4>Time</h4>\n              <Form\n                onSubmit={(e) =>\n                  editTrip(e as unknown as ChangeEvent<HTMLButtonElement>)\n                }\n              >\n                <TimeInput setFormState={setState} formState={state} />\n                <button type=\"submit\" className=\"trail-list-button\">\n                  Save\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"trail-list-button\"\n                  id=\"delete\"\n                  name=\"time\"\n                  onClick={(e) => {\n                    editTrip(e as unknown as ChangeEvent<HTMLButtonElement>);\n                  }}\n                >\n                  Delete Time\n                </button>\n              </Form>\n            </div>\n          )}\n          {!isEditingNotes && !trip.notes && (\n            <div className=\"trip-detail\">\n              <h4>Notes</h4>\n              {trip.notes}\n              <button\n                type=\"button\"\n                className=\"icon-button\"\n                onClick={() => setIsEditingNotes(true)}\n              >\n                Add Notes\n              </button>\n            </div>\n          )}\n          {!isEditingNotes && trip.notes && (\n            <div className=\"trip-detail\">\n              <div className=\"flex\">\n                <h4>Notes</h4>\n                <button\n                  type=\"button\"\n                  className=\"icon-button\"\n                  onClick={() => setIsEditingNotes(true)}\n                >\n                  <FontAwesomeIcon icon={faPencil} />\n                </button>\n              </div>\n              {trip.notes}\n            </div>\n          )}\n          {isEditingNotes && (\n            <div className=\"trip-detail\">\n              <h4>Notes</h4>\n              <Form\n                onSubmit={(e) =>\n                  editTrip(e as unknown as ChangeEvent<HTMLButtonElement>)\n                }\n              >\n                <Form.Control\n                  as=\"textarea\"\n                  rows={5}\n                  onChange={(e) =>\n                    handleInput(\n                      e as unknown as ChangeEvent<HTMLInputElement>,\n                      setState,\n                    )\n                  }\n                  name=\"notes\"\n                  id=\"notes\"\n                  value={state?.notes}\n                />\n                <button type=\"submit\" className=\"trail-list-button\">\n                  Save\n                </button>\n              </Form>\n            </div>\n          )}\n        </div>\n        <div className=\"trip-weather\">\n          {weatherHtml ? (\n            <div className=\"scroll-squares flex center column\">\n              <h3 className=\"center\">Weather</h3>\n              {weatherHtml}\n            </div>\n          ) : (\n            <div className=\"scroll-squares flex center column no-weather-wrapper\">\n              <h3 className=\"center\">Weather</h3>\n              <div className=\"no-weather-wrapper flex center\">\n                <p className=\"no-weather\">\n                  Weather is available 7 days out. Check back closer to your\n                  trip to view the weather forecast!\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      <ul className=\"trip-detail-trail-info\">\n        <li>\n          <h4>{trip.parkname}</h4>\n          {trip.address}\n        </li>\n        <li>\n          <h4>Length</h4>\n          {trip.length} miles\n        </li>\n        <li>\n          <h4>Elevation gain</h4>\n          {trip.elevation_gain} ft\n        </li>\n        <li>\n          <div className=\"difficulty-heading\">\n            <h4>Difficulty</h4>\n          </div>\n          <div>{trip.difficulty}</div>\n        </li>\n        <li>\n          <h4>Trail Type</h4>\n          {TRAIL_TYPES[trip.trail_type]}\n        </li>\n        {trip.fee && (\n          <li className=\"whitespace\">\n            <h4>Fees</h4>\n            {trip.fee.replaceAll(\";\", \"\\n\").replaceAll(\"/\", \" \")}\n          </li>\n        )}\n      </ul>\n      <button\n        type=\"button\"\n        className=\"cancel-trip\"\n        onClick={(e) =>\n          deleteTrip(e as unknown as ChangeEvent<HTMLButtonElement>)\n        }\n      >\n        Cancel Trip\n      </button>\n      <MapModal\n        latitude={toNumber(trip.latitude)}\n        longitude={toNumber(trip.longitude)}\n        show={showMap}\n        setShow={setShowMap}\n      />\n    </div>\n  );\n}\n\nexport default TripDetail;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from \"./components/App/App\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Admin from \"./components/Admin/Admin\";\nimport TrailForm from \"./components/Admin/TrailForm\";\nimport Home from \"./components/User/Home\";\nimport AdminParkDetail from \"./components/Admin/AdminParkDetail\";\nimport AdminTrailDetail from \"./components/Admin/AdminTrailDetail\";\nimport AdminList from \"./components/Admin/AdminList\";\nimport TrailDetail from \"./components/User/TrailDetail\";\nimport ParkDetail from \"./components/User/ParkDetail\";\nimport TripForm from \"./components/User/TripForm\";\nimport Trips from \"./components/User/Trips\";\nimport TripDetail from \"./components/User/TripDetail\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")!);\n\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<Home />} />\n          <Route path=\"login\" element={<Login />} />\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"trail/:trailId\" element={<TrailDetail />} />\n          <Route path=\"park/:parkId\" element={<ParkDetail />} />\n          <Route path=\"plan/:trailId\" element={<TripForm />} />\n          <Route path=\"trips/\" element={<Trips />} />\n          <Route path=\"trip/:tripId\" element={<TripDetail />} />\n          <Route path=\"administrator\" element={<Admin />}>\n            <Route index element={<AdminList />} />\n            <Route path=\"park/:parkId\" element={<AdminParkDetail />} />\n            <Route path=\"trail/:trailId\" element={<AdminTrailDetail />} />\n            <Route path=\"addtrail\" element={<TrailForm />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={\n              <main style={{ padding: \"1 rem\" }}>\n                <p>There's nothing here!</p>\n              </main>\n            }\n          />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}